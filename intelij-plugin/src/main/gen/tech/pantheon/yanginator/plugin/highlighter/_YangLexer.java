/*
 *
 *   Copyright (c) 2021-2025 PANTHEON.tech, s.r.o. All rights reserved.
 *
 *   This program and the accompanying materials are made available under the
 *   terms of the Eclipse Public License v1.0 which accompanies this distribution,
 *   and is available at http://www.eclipse.org/legal/epl-v10.html
 *
 */

// Generated by JFlex 1.9.2 http://jflex.de/  (tweaked for IntelliJ platform)
// source: _YangLexer.flex

package tech.pantheon.yanginator.plugin.highlighter;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;

import static com.intellij.psi.TokenType.WHITE_SPACE;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_ACTION_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_ADD_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_AND_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_ANYDATA_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_ANYXML_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_ARGUMENT_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_AUGMENT_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_BASE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_BELONGS_TO_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_BIT_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_BLOCK_COMMENT;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_CASE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_CHOICE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_CONFIG_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_CONTACT_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_CONTAINER_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_CURRENT_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_DATE_ARG;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_DEFAULT_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_DELETE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_DEPRECATED_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_DESCRIPTION_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_DEVIATE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_DEVIATION_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_DIGIT;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_ENUM_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_ERROR_APP_TAG_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_ERROR_MESSAGE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_EXTENSION_IDENTIFIER;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_EXTENSION_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_FALSE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_FEATURE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_FRACTION_DIGITS_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_GROUPING_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_IDENTIFIER;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_IDENTITY_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_IF_FEATURE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_IMPORT_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_INCLUDE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_INPUT_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_INVALID_ESCAPE;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_INVERT_MATCH_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_KEYWORD_MATCHER;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_KEY_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_LEAF_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_LEAF_LIST_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_LEFT_BRACE;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_LENGTH_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_LIST_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_MANDATORY_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_MAX_ELEMENTS_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_MAX_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_MIN_ELEMENTS_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_MIN_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_MODIFIER_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_MODULE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_MUST_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_NAMESPACE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_NON_WORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_NOTIFICATION_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_NOT_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_NOT_SUPPORTED_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_OBSOLETE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_OPERATORS;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_ORDERED_BY_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_ORGANIZATION_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_OR_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_OUTPUT_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_PATH_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_PATTERN_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_POSITION_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_PREFIX_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_PRESENCE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_RANGE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_REFERENCE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_REFINE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_REPLACE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_REQUIRE_INSTANCE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_REVISION_DATE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_REVISION_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_RIGHT_BRACE;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_RPC_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_SEMICOLON;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_SINGLE_LINE_COMMENT;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_STATUS_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_STRING;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_SUBMODULE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_SYSTEM_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_TRUE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_TYPEDEF_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_TYPE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_UNBOUNDED_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_UNIQUE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_UNITS_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_USER_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_USES_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_VALID_ESCAPE;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_VALUE_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_WHEN_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_YANG_VERSION_KEYWORD;
import static tech.pantheon.yanginator.plugin.highlighter.psi.YangTypes.YANG_H_YIN_ELEMENT_KEYWORD;


public class _YangLexer implements FlexLexer {

    /**
     * This character denotes the end of file
     */
    public static final int YYEOF = -1;

    /**
     * initial size of the lookahead buffer
     */
    private static final int ZZ_BUFFERSIZE = 16384;

    /**
     * lexical states
     */
    public static final int YYINITIAL = 0;

    /**
     * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
     * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
     * at the beginning of a line
     * l is of the form l = 2*k, k a non negative integer
     */
    private static final int ZZ_LEXSTATE[] = {
            0, 0
    };

    /**
     * Top-level table for translating characters to character classes
     */
    private static final int[] ZZ_CMAP_TOP = zzUnpackcmap_top();

    private static final String ZZ_CMAP_TOP_PACKED_0 =
            "\1\0\1\u0100\1\u0200\1\u0300\1\u0400\1\u0500\1\u0600\1\u0700" +
                    "\1\u0800\1\u0900\1\u0a00\1\u0b00\1\u0c00\1\u0d00\1\u0e00\1\u0f00" +
                    "\1\u1000\1\u0100\1\u1100\1\u1200\1\u1300\1\u0100\1\u1400\1\u1500" +
                    "\1\u1600\1\u1700\1\u1800\1\u1900\1\u1a00\1\u1b00\1\u0100\1\u1c00" +
                    "\1\u1d00\1\u1e00\2\u1f00\1\u2000\7\u1f00\1\u2100\1\u2200\1\u2300" +
                    "\1\u1f00\1\u2400\1\u2500\2\u1f00\31\u0100\1\u2600\121\u0100\1\u2700" +
                    "\4\u0100\1\u2800\1\u0100\1\u2900\1\u2a00\1\u2b00\1\u2c00\1\u2d00" +
                    "\1\u2e00\53\u0100\1\u2f00\41\u1f00\1\u0100\1\u3000\1\u3100\1\u0100" +
                    "\1\u3200\1\u3300\1\u3400\1\u3500\1\u3600\1\u3700\1\u3800\1\u3900" +
                    "\1\u3a00\1\u0100\1\u3b00\1\u3c00\1\u3d00\1\u3e00\1\u3f00\1\u4000" +
                    "\1\u4100\1\u1f00\1\u4200\1\u4300\1\u4400\1\u4500\1\u4600\1\u4700" +
                    "\1\u4800\1\u4900\1\u4a00\1\u4b00\1\u4c00\1\u4d00\1\u1f00\1\u4e00" +
                    "\1\u4f00\1\u5000\1\u1f00\3\u0100\1\u5100\1\u5200\1\u5300\12\u1f00" +
                    "\4\u0100\1\u5400\17\u1f00\2\u0100\1\u5500\41\u1f00\2\u0100\1\u5600" +
                    "\1\u5700\2\u1f00\1\u5800\1\u5900\27\u0100\1\u5a00\2\u0100\1\u5b00" +
                    "\45\u1f00\1\u0100\1\u5c00\1\u5d00\11\u1f00\1\u5e00\24\u1f00\1\u5f00" +
                    "\1\u6000\1\u1f00\1\u6100\1\u6200\1\u6300\1\u6400\2\u1f00\1\u6500" +
                    "\5\u1f00\1\u6600\1\u6700\1\u6800\5\u1f00\1\u6900\1\u6a00\4\u1f00" +
                    "\1\u6b00\2\u1f00\1\u6c00\16\u1f00\246\u0100\1\u6d00\20\u0100\1\u6e00" +
                    "\1\u6f00\25\u0100\1\u7000\34\u0100\1\u7100\14\u1f00\2\u0100\1\u7200" +
                    "\u0b06\u1f00\1\u2700\u02fe\u1f00";

    private static int[] zzUnpackcmap_top() {
        int[] result = new int[4352];
        int offset = 0;
        offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackcmap_top(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }


    /**
     * Second-level tables for translating characters to character classes
     */
    private static final int[] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();

    private static final String ZZ_CMAP_BLOCKS_PACKED_0 =
            "\11\0\1\1\1\2\2\1\1\2\22\0\1\1\1\0" +
                    "\1\3\4\0\1\4\2\0\1\5\1\6\1\0\1\7" +
                    "\1\10\1\11\12\12\1\13\1\14\5\0\21\15\1\16" +
                    "\10\15\1\0\1\17\2\0\1\15\1\0\1\20\1\21" +
                    "\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\15" +
                    "\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40" +
                    "\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50" +
                    "\1\51\1\0\1\52\7\0\1\53\32\0\1\53\11\0" +
                    "\1\54\12\0\1\54\4\0\1\54\5\0\27\54\1\0" +
                    "\37\54\1\0\u01ca\54\4\0\14\54\16\0\5\54\7\0" +
                    "\1\54\1\0\1\54\21\0\165\54\1\0\2\54\2\0" +
                    "\4\54\1\0\1\54\6\0\1\54\1\0\3\54\1\0" +
                    "\1\54\1\0\24\54\1\0\123\54\1\0\213\54\1\0" +
                    "\255\54\1\0\46\54\2\0\1\54\6\0\51\54\10\0" +
                    "\55\54\1\0\1\54\1\0\2\54\1\0\2\54\1\0" +
                    "\1\54\10\0\33\54\4\0\4\54\35\0\13\54\5\0" +
                    "\112\54\4\0\146\54\1\0\10\54\2\0\12\54\1\0" +
                    "\23\54\2\0\1\54\20\0\73\54\2\0\145\54\16\0" +
                    "\66\54\4\0\1\54\2\0\1\54\2\0\56\54\22\0" +
                    "\34\54\4\0\13\54\65\0\25\54\1\0\10\54\25\0" +
                    "\17\54\1\0\201\54\2\0\12\54\1\0\23\54\1\0" +
                    "\10\54\2\0\2\54\2\0\26\54\1\0\7\54\1\0" +
                    "\1\54\3\0\4\54\2\0\11\54\2\0\2\54\2\0" +
                    "\4\54\10\0\1\54\4\0\2\54\1\0\5\54\2\0" +
                    "\14\54\12\0\1\54\1\0\1\54\2\0\3\54\1\0" +
                    "\6\54\4\0\2\54\2\0\26\54\1\0\7\54\1\0" +
                    "\2\54\1\0\2\54\1\0\2\54\2\0\1\54\1\0" +
                    "\5\54\4\0\2\54\2\0\3\54\3\0\1\54\7\0" +
                    "\4\54\1\0\1\54\7\0\20\54\13\0\3\54\1\0" +
                    "\11\54\1\0\3\54\1\0\26\54\1\0\7\54\1\0" +
                    "\2\54\1\0\5\54\2\0\12\54\1\0\3\54\1\0" +
                    "\3\54\2\0\1\54\17\0\4\54\2\0\12\54\11\0" +
                    "\7\54\1\0\3\54\1\0\10\54\2\0\2\54\2\0" +
                    "\26\54\1\0\7\54\1\0\2\54\1\0\5\54\2\0" +
                    "\11\54\2\0\2\54\2\0\3\54\10\0\2\54\4\0" +
                    "\2\54\1\0\5\54\2\0\12\54\1\0\1\54\20\0" +
                    "\2\54\1\0\6\54\3\0\3\54\1\0\4\54\3\0" +
                    "\2\54\1\0\1\54\1\0\2\54\3\0\2\54\3\0" +
                    "\3\54\3\0\14\54\4\0\5\54\3\0\3\54\1\0" +
                    "\4\54\2\0\1\54\6\0\1\54\16\0\12\54\20\0" +
                    "\15\54\1\0\3\54\1\0\27\54\1\0\20\54\3\0" +
                    "\10\54\1\0\3\54\1\0\4\54\7\0\2\54\1\0" +
                    "\3\54\5\0\4\54\2\0\12\54\20\0\4\54\1\0" +
                    "\10\54\1\0\3\54\1\0\27\54\1\0\12\54\1\0" +
                    "\5\54\2\0\11\54\1\0\3\54\1\0\4\54\7\0" +
                    "\2\54\7\0\1\54\1\0\4\54\2\0\12\54\1\0" +
                    "\2\54\15\0\4\54\1\0\10\54\1\0\3\54\1\0" +
                    "\63\54\1\0\3\54\1\0\5\54\5\0\4\54\7\0" +
                    "\5\54\2\0\12\54\12\0\6\54\2\0\2\54\1\0" +
                    "\22\54\3\0\30\54\1\0\11\54\1\0\1\54\2\0" +
                    "\7\54\3\0\1\54\4\0\6\54\1\0\1\54\1\0" +
                    "\10\54\6\0\12\54\2\0\2\54\15\0\72\54\5\0" +
                    "\17\54\1\0\12\54\47\0\2\54\1\0\1\54\1\0" +
                    "\5\54\1\0\30\54\1\0\1\54\1\0\27\54\2\0" +
                    "\5\54\1\0\1\54\1\0\6\54\2\0\12\54\2\0" +
                    "\4\54\40\0\1\54\27\0\2\54\6\0\12\54\13\0" +
                    "\1\54\1\0\1\54\1\0\1\54\4\0\12\54\1\0" +
                    "\44\54\4\0\24\54\1\0\22\54\1\0\44\54\11\0" +
                    "\1\54\71\0\112\54\6\0\116\54\2\0\46\54\1\0" +
                    "\1\54\5\0\1\54\2\0\53\54\1\0\115\54\1\0" +
                    "\4\54\2\0\7\54\1\0\1\54\1\0\4\54\2\0" +
                    "\51\54\1\0\4\54\2\0\41\54\1\0\4\54\2\0" +
                    "\7\54\1\0\1\54\1\0\4\54\2\0\17\54\1\0" +
                    "\71\54\1\0\4\54\2\0\103\54\2\0\3\54\40\0" +
                    "\20\54\20\0\126\54\2\0\6\54\3\0\u016c\54\2\0" +
                    "\21\54\1\53\32\54\5\0\113\54\3\0\13\54\7\0" +
                    "\15\54\1\0\7\54\13\0\25\54\13\0\24\54\14\0" +
                    "\15\54\1\0\3\54\1\0\2\54\14\0\124\54\3\0" +
                    "\1\54\4\0\2\54\2\0\12\54\41\0\3\54\2\0" +
                    "\12\54\6\0\131\54\7\0\53\54\5\0\106\54\12\0" +
                    "\37\54\1\0\14\54\4\0\14\54\12\0\50\54\2\0" +
                    "\5\54\13\0\54\54\4\0\32\54\6\0\12\54\46\0" +
                    "\34\54\4\0\77\54\1\0\35\54\2\0\13\54\6\0" +
                    "\12\54\15\0\1\54\10\0\17\54\101\0\114\54\4\0" +
                    "\12\54\21\0\11\54\14\0\164\54\14\0\70\54\10\0" +
                    "\12\54\3\0\61\54\2\0\11\54\7\0\53\54\2\0" +
                    "\3\54\20\0\3\54\1\0\47\54\5\0\372\54\1\0" +
                    "\33\54\2\0\6\54\2\0\46\54\2\0\6\54\2\0" +
                    "\10\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0" +
                    "\37\54\2\0\65\54\1\0\7\54\1\0\1\54\3\0" +
                    "\3\54\1\0\7\54\3\0\4\54\2\0\6\54\4\0" +
                    "\15\54\5\0\3\54\1\0\7\54\3\0\13\53\35\0" +
                    "\2\53\5\0\1\53\17\0\2\54\23\0\1\54\12\0" +
                    "\1\53\21\0\1\54\15\0\1\54\20\0\15\54\63\0" +
                    "\41\54\21\0\1\54\4\0\1\54\2\0\12\54\1\0" +
                    "\1\54\3\0\5\54\6\0\1\54\1\0\1\54\1\0" +
                    "\1\54\1\0\4\54\1\0\13\54\2\0\4\54\5\0" +
                    "\5\54\4\0\1\54\21\0\51\54\u022d\0\64\54\26\0" +
                    "\57\54\1\0\57\54\1\0\205\54\6\0\11\54\14\0" +
                    "\46\54\1\0\1\54\5\0\1\54\2\0\70\54\7\0" +
                    "\1\54\17\0\30\54\11\0\7\54\1\0\7\54\1\0" +
                    "\7\54\1\0\7\54\1\0\7\54\1\0\7\54\1\0" +
                    "\7\54\1\0\7\54\1\0\40\54\57\0\1\54\320\0" +
                    "\1\53\4\0\3\54\31\0\17\54\1\0\5\54\2\0" +
                    "\5\54\4\0\126\54\2\0\2\54\2\0\3\54\1\0" +
                    "\132\54\1\0\4\54\5\0\53\54\1\0\136\54\21\0" +
                    "\33\54\65\0\306\54\112\0\360\54\20\0\215\54\103\0" +
                    "\56\54\2\0\15\54\3\0\34\54\24\0\63\54\1\0" +
                    "\12\54\1\0\163\54\45\0\11\54\2\0\147\54\2\0" +
                    "\65\54\2\0\5\54\60\0\61\54\30\0\64\54\14\0" +
                    "\106\54\12\0\12\54\6\0\30\54\3\0\1\54\1\0" +
                    "\61\54\2\0\44\54\14\0\35\54\3\0\101\54\16\0" +
                    "\13\54\6\0\37\54\1\0\67\54\11\0\16\54\2\0" +
                    "\12\54\6\0\27\54\3\0\111\54\30\0\3\54\2\0" +
                    "\20\54\2\0\5\54\12\0\6\54\2\0\6\54\2\0" +
                    "\6\54\11\0\7\54\1\0\7\54\1\0\53\54\1\0" +
                    "\14\54\10\0\173\54\1\0\2\54\2\0\12\54\6\0" +
                    "\244\54\14\0\27\54\4\0\61\54\4\0\156\54\2\0" +
                    "\152\54\46\0\7\54\14\0\5\54\5\0\14\54\1\0" +
                    "\15\54\1\0\5\54\1\0\1\54\1\0\2\54\1\0" +
                    "\2\54\1\0\154\54\41\0\153\54\22\0\100\54\2\0" +
                    "\66\54\50\0\14\54\4\0\20\54\20\0\20\54\3\0" +
                    "\2\54\30\0\3\54\40\0\5\54\1\0\207\54\23\0" +
                    "\12\54\7\0\32\54\4\0\1\54\1\0\32\54\13\0" +
                    "\131\54\3\0\6\54\2\0\6\54\2\0\6\54\2\0" +
                    "\3\54\43\0\14\54\1\0\32\54\1\0\23\54\1\0" +
                    "\2\54\1\0\17\54\2\0\16\54\42\0\173\54\105\0" +
                    "\65\54\210\0\1\54\202\0\35\54\3\0\61\54\17\0" +
                    "\1\54\37\0\40\54\15\0\36\54\5\0\53\54\5\0" +
                    "\36\54\2\0\44\54\4\0\10\54\1\0\5\54\52\0" +
                    "\236\54\2\0\12\54\6\0\44\54\4\0\44\54\4\0" +
                    "\50\54\10\0\64\54\234\0\67\54\11\0\26\54\12\0" +
                    "\10\54\230\0\6\54\2\0\1\54\1\0\54\54\1\0" +
                    "\2\54\3\0\1\54\2\0\27\54\12\0\27\54\11\0" +
                    "\37\54\101\0\23\54\1\0\2\54\12\0\26\54\12\0" +
                    "\32\54\106\0\70\54\6\0\2\54\100\0\4\54\1\0" +
                    "\2\54\5\0\10\54\1\0\3\54\1\0\35\54\2\0" +
                    "\3\54\4\0\1\54\40\0\35\54\3\0\35\54\43\0" +
                    "\10\54\1\0\36\54\31\0\66\54\12\0\26\54\12\0" +
                    "\23\54\15\0\22\54\156\0\111\54\67\0\63\54\15\0" +
                    "\63\54\15\0\50\54\10\0\12\54\306\0\35\54\12\0" +
                    "\1\54\10\0\41\54\217\0\27\54\11\0\107\54\37\0" +
                    "\12\54\17\0\74\54\25\0\31\54\7\0\12\54\6\0" +
                    "\65\54\1\0\12\54\4\0\3\54\11\0\44\54\2\0" +
                    "\1\54\11\0\105\54\4\0\4\54\3\0\13\54\1\0" +
                    "\1\54\43\0\22\54\1\0\45\54\6\0\1\54\101\0" +
                    "\7\54\1\0\1\54\1\0\4\54\1\0\17\54\1\0" +
                    "\12\54\7\0\73\54\5\0\12\54\6\0\4\54\1\0" +
                    "\10\54\2\0\2\54\2\0\26\54\1\0\7\54\1\0" +
                    "\2\54\1\0\5\54\1\0\12\54\2\0\2\54\2\0" +
                    "\3\54\2\0\1\54\6\0\1\54\5\0\7\54\2\0" +
                    "\7\54\3\0\5\54\213\0\113\54\5\0\12\54\4\0" +
                    "\2\54\40\0\106\54\1\0\1\54\10\0\12\54\246\0" +
                    "\66\54\2\0\11\54\27\0\6\54\42\0\101\54\3\0" +
                    "\1\54\13\0\12\54\46\0\71\54\7\0\12\54\66\0" +
                    "\33\54\2\0\17\54\4\0\12\54\306\0\73\54\145\0" +
                    "\112\54\25\0\1\54\240\0\10\54\2\0\56\54\2\0" +
                    "\10\54\1\0\2\54\33\0\77\54\10\0\1\54\10\0" +
                    "\112\54\3\0\1\54\42\0\71\54\7\0\11\54\1\0" +
                    "\55\54\1\0\11\54\17\0\12\54\30\0\36\54\2\0" +
                    "\26\54\1\0\16\54\111\0\7\54\1\0\2\54\1\0" +
                    "\54\54\3\0\1\54\1\0\2\54\1\0\11\54\10\0" +
                    "\12\54\6\0\6\54\1\0\2\54\1\0\45\54\1\0" +
                    "\2\54\1\0\6\54\7\0\12\54\u0136\0\27\54\11\0" +
                    "\232\54\146\0\157\54\21\0\304\54\274\0\57\54\321\0" +
                    "\107\54\271\0\71\54\7\0\37\54\1\0\12\54\146\0" +
                    "\36\54\2\0\5\54\13\0\67\54\11\0\4\54\14\0" +
                    "\12\54\11\0\25\54\5\0\23\54\260\0\100\54\200\0" +
                    "\113\54\4\0\71\54\7\0\21\54\100\0\2\54\1\0" +
                    "\1\54\34\0\370\54\10\0\363\54\15\0\37\54\61\0" +
                    "\3\54\21\0\4\54\10\0\u018c\54\4\0\153\54\5\0" +
                    "\15\54\3\0\11\54\7\0\12\54\3\0\2\54\306\0" +
                    "\5\54\3\0\6\54\10\0\10\54\2\0\7\54\36\0" +
                    "\4\54\224\0\3\54\273\0\125\54\1\0\107\54\1\0" +
                    "\2\54\2\0\1\54\2\0\2\54\2\0\4\54\1\0" +
                    "\14\54\1\0\1\54\1\0\7\54\1\0\101\54\1\0" +
                    "\4\54\2\0\10\54\1\0\7\54\1\0\34\54\1\0" +
                    "\4\54\1\0\5\54\1\0\1\54\3\0\7\54\1\0" +
                    "\u0154\54\2\0\31\54\1\0\31\54\1\0\37\54\1\0" +
                    "\31\54\1\0\37\54\1\0\31\54\1\0\37\54\1\0" +
                    "\31\54\1\0\37\54\1\0\31\54\1\0\10\54\2\0" +
                    "\151\54\4\0\62\54\10\0\1\54\16\0\1\54\26\0" +
                    "\5\54\1\0\17\54\120\0\7\54\1\0\21\54\2\0" +
                    "\7\54\1\0\2\54\1\0\5\54\325\0\55\54\3\0" +
                    "\16\54\2\0\12\54\4\0\1\54\u0171\0\72\54\6\0" +
                    "\305\54\13\0\7\54\51\0\114\54\4\0\12\54\246\0" +
                    "\4\54\1\0\33\54\1\0\2\54\1\0\1\54\2\0" +
                    "\1\54\1\0\12\54\1\0\4\54\1\0\1\54\1\0" +
                    "\1\54\6\0\1\54\4\0\1\54\1\0\1\54\1\0" +
                    "\1\54\1\0\3\54\1\0\2\54\1\0\1\54\2\0" +
                    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0" +
                    "\1\54\1\0\2\54\1\0\1\54\2\0\4\54\1\0" +
                    "\7\54\1\0\4\54\1\0\4\54\1\0\1\54\1\0" +
                    "\12\54\1\0\21\54\5\0\3\54\1\0\5\54\1\0" +
                    "\21\54\164\0\32\54\6\0\32\54\6\0\32\54\166\0" +
                    "\327\54\51\0\65\54\13\0\336\54\2\0\u0182\54\16\0" +
                    "\u0131\54\37\0\36\54\342\0";

    private static int[] zzUnpackcmap_blocks() {
        int[] result = new int[29440];
        int offset = 0;
        offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackcmap_blocks(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }

    /**
     * Translates DFA states to action switch labels.
     */
    private static final int[] ZZ_ACTION = zzUnpackAction();

    private static final String ZZ_ACTION_PACKED_0 =
            "\1\0\1\1\1\2\2\3\1\1\1\4\1\1\1\5" +
                    "\1\6\1\7\1\1\25\7\1\10\1\11\27\0\3\3" +
                    "\1\12\1\13\1\0\1\14\3\15\1\16\42\7\1\17" +
                    "\22\7\63\0\2\3\1\0\1\13\1\0\1\7\1\20" +
                    "\1\21\5\7\1\22\26\7\1\23\4\7\1\24\1\25" +
                    "\3\7\1\26\14\7\1\27\14\7\43\0\1\30\25\0" +
                    "\1\12\1\0\5\7\1\31\1\7\1\32\11\7\1\33" +
                    "\14\7\1\34\1\7\1\35\5\7\1\36\7\7\1\37" +
                    "\15\7\1\40\1\41\3\7\1\42\1\43\1\7\1\44" +
                    "\2\7\64\0\21\7\1\45\7\7\1\46\23\7\1\47" +
                    "\13\7\1\50\1\51\2\7\47\0\1\52\1\7\1\53" +
                    "\3\7\1\54\1\55\4\7\1\56\12\7\1\57\3\7" +
                    "\1\60\4\7\1\61\6\7\1\62\2\7\1\63\2\7" +
                    "\1\64\3\7\1\65\1\7\1\66\2\7\1\67\2\7" +
                    "\34\0\1\70\1\7\1\71\1\7\1\72\1\7\1\73" +
                    "\1\74\2\7\1\75\4\7\1\76\4\7\1\77\14\7" +
                    "\1\100\3\7\1\101\3\7\1\102\3\7\20\0\1\103" +
                    "\1\104\11\7\1\105\1\106\6\7\1\107\3\7\1\110" +
                    "\2\7\1\111\1\112\2\7\1\113\4\7\12\0\1\103" +
                    "\1\7\1\114\2\7\1\115\2\7\1\116\3\7\1\117" +
                    "\1\120\2\7\1\121\4\7\1\122\2\7\1\123\1\124" +
                    "\2\7\11\0\1\125\1\126\4\7\1\127\5\7\1\130" +
                    "\5\7\7\0\1\131\14\7\1\132\3\0\3\7\1\133" +
                    "\1\134\1\135\1\7\1\136\1\137\2\7\1\140\2\0" +
                    "\1\141\1\142\1\7\1\143\1\7\1\144\2\7\1\145" +
                    "\1\7\1\146";

    private static int[] zzUnpackAction() {
        int[] result = new int[822];
        int offset = 0;
        offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAction(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }


    /**
     * Translates a state to a row index in the transition table
     */
    private static final int[] ZZ_ROWMAP = zzUnpackRowMap();

    private static final String ZZ_ROWMAP_PACKED_0 =
            "\0\0\0\55\0\132\0\207\0\264\0\341\0\55\0\u010e" +
                    "\0\u013b\0\341\0\u0168\0\u0195\0\u01c2\0\u01ef\0\u021c\0\u0249" +
                    "\0\u0276\0\u02a3\0\u02d0\0\u02fd\0\u032a\0\u0357\0\u0384\0\u03b1" +
                    "\0\u03de\0\u040b\0\u0438\0\u0465\0\u0492\0\u04bf\0\u04ec\0\u0519" +
                    "\0\u0546\0\341\0\341\0\55\0\u0573\0\u05a0\0\u05cd\0\u05fa" +
                    "\0\u0627\0\u0654\0\u0681\0\u06ae\0\u06db\0\u0708\0\u0735\0\u0762" +
                    "\0\u078f\0\u07bc\0\u07e9\0\u0816\0\u0843\0\u0870\0\u089d\0\u08ca" +
                    "\0\u08f7\0\u0924\0\u0951\0\341\0\u097e\0\u09ab\0\u09d8\0\u0a05" +
                    "\0\u0a32\0\55\0\u0573\0\341\0\341\0\u0a5f\0\u0a8c\0\u0ab9" +
                    "\0\u0ae6\0\u0b13\0\u0b40\0\u0b6d\0\u0b9a\0\u0bc7\0\u0bf4\0\u0c21" +
                    "\0\u0c4e\0\u0c7b\0\u0ca8\0\u0cd5\0\u0d02\0\u0d2f\0\u0d5c\0\u0d89" +
                    "\0\u0db6\0\u0de3\0\u0e10\0\u0e3d\0\u0e6a\0\u0e97\0\u0ec4\0\u0ef1" +
                    "\0\u0f1e\0\u0f4b\0\u0f78\0\u0fa5\0\u0fd2\0\u0fff\0\u102c\0\u1059" +
                    "\0\u1086\0\u10b3\0\u10e0\0\u110d\0\u113a\0\u1167\0\u1194\0\u11c1" +
                    "\0\u11ee\0\u121b\0\u1248\0\u1275\0\u12a2\0\u12cf\0\u12fc\0\u1329" +
                    "\0\u1356\0\u1383\0\u13b0\0\u13dd\0\u140a\0\u1437\0\u1464\0\u1491" +
                    "\0\u14be\0\u14eb\0\u1518\0\u1545\0\u1572\0\u159f\0\u15cc\0\u15f9" +
                    "\0\u1626\0\u1653\0\u1680\0\u16ad\0\u16da\0\u1707\0\u1734\0\u1761" +
                    "\0\u178e\0\u17bb\0\u17e8\0\u1815\0\u1842\0\u186f\0\u189c\0\u18c9" +
                    "\0\u18f6\0\u1923\0\u1950\0\u197d\0\u19aa\0\u19d7\0\u1a04\0\u1a31" +
                    "\0\u1a5e\0\u1a8b\0\u1ab8\0\u1ae5\0\u1b12\0\u1b3f\0\u1b6c\0\u1b99" +
                    "\0\u1bc6\0\u1bf3\0\u1c20\0\u1c4d\0\u1c7a\0\u1ca7\0\u1cd4\0\u1d01" +
                    "\0\341\0\u1d2e\0\u1d5b\0\u0168\0\u0168\0\u1d88\0\u1db5\0\u1de2" +
                    "\0\u1e0f\0\u1e3c\0\u0168\0\u1e69\0\u1e96\0\u1ec3\0\u1ef0\0\u1f1d" +
                    "\0\u1f4a\0\u1f77\0\u1fa4\0\u1fd1\0\u1ffe\0\u202b\0\u2058\0\u2085" +
                    "\0\u20b2\0\u20df\0\u210c\0\u2139\0\u2166\0\u2193\0\u21c0\0\u21ed" +
                    "\0\u221a\0\u0168\0\u2247\0\u2274\0\u22a1\0\u22ce\0\u22fb\0\u2328" +
                    "\0\u2355\0\u2382\0\u23af\0\u23dc\0\u2409\0\u2436\0\u2463\0\u2490" +
                    "\0\u24bd\0\u24ea\0\u2517\0\u2544\0\u2571\0\u259e\0\u25cb\0\u25f8" +
                    "\0\u0168\0\u2625\0\u2652\0\u267f\0\u26ac\0\u26d9\0\u2706\0\u2733" +
                    "\0\u2760\0\u278d\0\u27ba\0\u27e7\0\u2814\0\u2841\0\u286e\0\u289b" +
                    "\0\u28c8\0\u28f5\0\u2922\0\u294f\0\u297c\0\u29a9\0\u29d6\0\u2a03" +
                    "\0\u2a30\0\u2a5d\0\u2a8a\0\u2ab7\0\u2ae4\0\u2b11\0\u2b3e\0\u2b6b" +
                    "\0\u2b98\0\u2bc5\0\u2bf2\0\u2c1f\0\u2c4c\0\u2c79\0\u2ca6\0\u2cd3" +
                    "\0\u2d00\0\u2d2d\0\u2d5a\0\u2d87\0\u2db4\0\u2de1\0\u2e0e\0\u2e3b" +
                    "\0\u286e\0\u2e68\0\u2e95\0\u2ec2\0\u2eef\0\u2f1c\0\u2f49\0\u2f76" +
                    "\0\u2fa3\0\u2fd0\0\u2ffd\0\u302a\0\u3057\0\u3084\0\u30b1\0\u30de" +
                    "\0\u310b\0\u3138\0\u3165\0\u3192\0\u31bf\0\u31ec\0\341\0\u3219" +
                    "\0\u3246\0\u3273\0\u32a0\0\u32cd\0\u32fa\0\u0168\0\u3327\0\u0168" +
                    "\0\u3354\0\u3381\0\u33ae\0\u33db\0\u3408\0\u3435\0\u3462\0\u348f" +
                    "\0\u34bc\0\u0168\0\u34e9\0\u3516\0\u3543\0\u3570\0\u359d\0\u35ca" +
                    "\0\u35f7\0\u3624\0\u3651\0\u367e\0\u36ab\0\u36d8\0\u3705\0\u3732" +
                    "\0\u0168\0\u375f\0\u378c\0\u37b9\0\u37e6\0\u3813\0\u0168\0\u3840" +
                    "\0\u386d\0\u389a\0\u38c7\0\u38f4\0\u3921\0\u394e\0\u0168\0\u397b" +
                    "\0\u39a8\0\u39d5\0\u3a02\0\u3a2f\0\u3a5c\0\u3a89\0\u3ab6\0\u3ae3" +
                    "\0\u3b10\0\u3b3d\0\u3b6a\0\u3b97\0\u0168\0\u3bc4\0\u3bf1\0\u3c1e" +
                    "\0\u3c4b\0\u0168\0\u0168\0\u3c78\0\u0168\0\u3ca5\0\u3cd2\0\u3cff" +
                    "\0\u3d2c\0\u3d59\0\u3d86\0\u3db3\0\u3de0\0\u3e0d\0\u3e3a\0\u3e67" +
                    "\0\u3e94\0\u3ec1\0\u3eee\0\u3f1b\0\u3f48\0\u3f75\0\u3fa2\0\u3fcf" +
                    "\0\u3ffc\0\u4029\0\u4056\0\u4083\0\u40b0\0\u40dd\0\u410a\0\u4137" +
                    "\0\u4164\0\u4191\0\u41be\0\u41eb\0\u4218\0\u4245\0\u4272\0\u429f" +
                    "\0\u42cc\0\u42f9\0\u4326\0\u4353\0\u4380\0\u43ad\0\u43da\0\u4407" +
                    "\0\u4434\0\u4461\0\u448e\0\u44bb\0\u44e8\0\u4515\0\u4542\0\u456f" +
                    "\0\u459c\0\u45c9\0\u45f6\0\u4623\0\u4650\0\u467d\0\u46aa\0\u46d7" +
                    "\0\u4704\0\u4731\0\u475e\0\u478b\0\u47b8\0\u47e5\0\u4812\0\u483f" +
                    "\0\u486c\0\u4899\0\u48c6\0\u48f3\0\u0168\0\u4920\0\u494d\0\u497a" +
                    "\0\u49a7\0\u49d4\0\u4a01\0\u4a2e\0\u0168\0\u4a5b\0\u4a88\0\u4ab5" +
                    "\0\u4ae2\0\u4b0f\0\u4b3c\0\u4b69\0\u4b96\0\u4bc3\0\u4bf0\0\u4c1d" +
                    "\0\u4c4a\0\u4c77\0\u4ca4\0\u4cd1\0\u4cfe\0\u4d2b\0\u4d58\0\u4d85" +
                    "\0\u0168\0\u4db2\0\u4ddf\0\u4e0c\0\u4e39\0\u4e66\0\u4e93\0\u4ec0" +
                    "\0\u4eed\0\u4f1a\0\u4f47\0\u4f74\0\u0168\0\u0168\0\u4fa1\0\u4fce" +
                    "\0\u4ffb\0\u5028\0\u5055\0\u5082\0\u50af\0\u50dc\0\u5109\0\u5136" +
                    "\0\u5163\0\u5190\0\u51bd\0\u51ea\0\u5217\0\u5244\0\u5271\0\u529e" +
                    "\0\u52cb\0\u52f8\0\u5325\0\u5352\0\u537f\0\u53ac\0\u53d9\0\u5406" +
                    "\0\u5433\0\u5460\0\u548d\0\u54ba\0\u54e7\0\u5514\0\u5541\0\u556e" +
                    "\0\u559b\0\u55c8\0\u55f5\0\u5622\0\u564f\0\u567c\0\u56a9\0\u0168" +
                    "\0\u56d6\0\u0168\0\u5703\0\u5730\0\u575d\0\u0168\0\u0168\0\u578a" +
                    "\0\u57b7\0\u57e4\0\u5811\0\u0168\0\u583e\0\u586b\0\u5898\0\u58c5" +
                    "\0\u58f2\0\u591f\0\u594c\0\u5979\0\u59a6\0\u59d3\0\u0168\0\u5a00" +
                    "\0\u5a2d\0\u5a5a\0\u0168\0\u5a87\0\u5ab4\0\u5ae1\0\u5b0e\0\u0168" +
                    "\0\u5b3b\0\u5b68\0\u5b95\0\u5bc2\0\u5bef\0\u5c1c\0\u0168\0\u5c49" +
                    "\0\u5c76\0\u0168\0\u5ca3\0\u5cd0\0\u0168\0\u5cfd\0\u5d2a\0\u5d57" +
                    "\0\u0168\0\u5d84\0\u0168\0\u5db1\0\u5dde\0\u0168\0\u5e0b\0\u5e38" +
                    "\0\u5e65\0\u5e92\0\u5ebf\0\u5eec\0\u5f19\0\u5f46\0\u5f73\0\u5fa0" +
                    "\0\u5fcd\0\u5ffa\0\u6027\0\u6054\0\u6081\0\u60ae\0\u60db\0\u6108" +
                    "\0\u6135\0\u6162\0\u618f\0\u61bc\0\u61e9\0\u6216\0\u6243\0\u6270" +
                    "\0\u629d\0\u62ca\0\u62f7\0\u6324\0\u0168\0\u6351\0\u0168\0\u637e" +
                    "\0\u0168\0\u63ab\0\u0168\0\u0168\0\u63d8\0\u6405\0\u0168\0\u6432" +
                    "\0\u645f\0\u648c\0\u64b9\0\u0168\0\u64e6\0\u6513\0\u6540\0\u656d" +
                    "\0\u0168\0\u659a\0\u65c7\0\u65f4\0\u6621\0\u664e\0\u667b\0\u66a8" +
                    "\0\u66d5\0\u6702\0\u672f\0\u675c\0\u6789\0\u0168\0\u67b6\0\u67e3" +
                    "\0\u6810\0\u0168\0\u683d\0\u686a\0\u6897\0\u0168\0\u68c4\0\u68f1" +
                    "\0\u691e\0\u694b\0\u6978\0\u69a5\0\u69d2\0\u69ff\0\u6a2c\0\u6a59" +
                    "\0\u6a86\0\u6ab3\0\u6ae0\0\u6b0d\0\u6b3a\0\u6b67\0\u6b94\0\u6bc1" +
                    "\0\u6bee\0\u6c1b\0\u0168\0\u6c48\0\u6c75\0\u6ca2\0\u6ccf\0\u6cfc" +
                    "\0\u6d29\0\u6d56\0\u6d83\0\u6db0\0\u0168\0\u0168\0\u6ddd\0\u6e0a" +
                    "\0\u6e37\0\u6e64\0\u6e91\0\u6ebe\0\u0168\0\u6eeb\0\u6f18\0\u6f45" +
                    "\0\u0168\0\u6f72\0\u6f9f\0\u0168\0\u0168\0\u6fcc\0\u6ff9\0\u7026" +
                    "\0\u7053\0\u7080\0\u70ad\0\u70da\0\u7107\0\u7134\0\u7161\0\u718e" +
                    "\0\u71bb\0\u71e8\0\u7215\0\u7242\0\u726f\0\u729c\0\341\0\u72c9" +
                    "\0\u0168\0\u72f6\0\u7323\0\u0168\0\u7350\0\u737d\0\u0168\0\u73aa" +
                    "\0\u73d7\0\u7404\0\u0168\0\u0168\0\u7431\0\u745e\0\u0168\0\u748b" +
                    "\0\u74b8\0\u74e5\0\u7512\0\u0168\0\u753f\0\u756c\0\u0168\0\u0168" +
                    "\0\u7599\0\u75c6\0\u75f3\0\u7620\0\u764d\0\u767a\0\u76a7\0\u76d4" +
                    "\0\u7701\0\u772e\0\u775b\0\u0168\0\u0168\0\u7788\0\u77b5\0\u77e2" +
                    "\0\u780f\0\u0168\0\u783c\0\u7869\0\u7896\0\u78c3\0\u78f0\0\u0168" +
                    "\0\u791d\0\u794a\0\u7977\0\u79a4\0\u79d1\0\u79fe\0\u7a2b\0\u7a58" +
                    "\0\u7a85\0\u7ab2\0\u7adf\0\u7b0c\0\u0168\0\u7b39\0\u7b66\0\u7b93" +
                    "\0\u7bc0\0\u7bed\0\u7c1a\0\u7c47\0\u7c74\0\u7ca1\0\u7cce\0\u7cfb" +
                    "\0\u7d28\0\u0168\0\u7d55\0\u7d82\0\u7daf\0\u7ddc\0\u7e09\0\u7e36" +
                    "\0\u0168\0\u0168\0\u0168\0\u7e63\0\u0168\0\u0168\0\u7e90\0\u7ebd" +
                    "\0\u0168\0\u7eea\0\u7f17\0\u0168\0\u0168\0\u7f44\0\u0168\0\u7f71" +
                    "\0\u0168\0\u7f9e\0\u7fcb\0\u0168\0\u7ff8\0\u0168";

    private static int[] zzUnpackRowMap() {
        int[] result = new int[822];
        int offset = 0;
        offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackRowMap(String packed, int offset, int[] result) {
        int i = 0;  /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length() - 1;
        while (i < l) {
            int high = packed.charAt(i++) << 16;
            result[j++] = high | packed.charAt(i++);
        }
        return j;
    }

    /**
     * The transition table of the DFA
     */
    private static final int[] ZZ_TRANS = zzUnpacktrans();

    private static final String ZZ_TRANS_PACKED_0 =
            "\1\2\2\3\1\4\1\5\1\6\1\7\2\2\1\10" +
                    "\1\11\1\2\1\12\2\13\1\14\1\15\1\16\1\17" +
                    "\1\20\1\21\1\22\1\23\1\13\1\24\1\25\1\26" +
                    "\1\27\1\30\1\31\1\32\1\13\1\33\1\34\1\35" +
                    "\1\36\1\37\1\40\1\13\1\41\1\13\1\42\1\43" +
                    "\1\3\1\6\1\44\2\45\3\0\3\44\2\0\1\44" +
                    "\3\0\1\44\33\0\1\45\2\0\2\3\15\0\1\46" +
                    "\1\47\1\50\1\51\1\52\1\53\1\54\1\0\1\55" +
                    "\1\56\1\57\1\60\1\61\1\62\1\63\1\0\1\64" +
                    "\1\65\1\66\1\67\1\70\1\71\1\0\1\72\3\0" +
                    "\1\3\1\0\3\73\1\74\51\73\4\75\1\74\50\75" +
                    "\62\0\1\76\3\0\1\77\55\0\1\100\51\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\31\13\4\0" +
                    "\1\102\2\103\3\104\3\102\2\104\1\102\2\104\1\105" +
                    "\1\102\1\104\1\105\12\104\1\105\3\104\3\105\10\104" +
                    "\1\103\1\104\7\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\2\13\1\106\1\107\10\13\1\110\3\13" +
                    "\1\111\2\13\1\112\5\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\1\113\3\13\1\114\3\13" +
                    "\1\115\20\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\1\116\6\13\1\117\5\13\1\120\5\13" +
                    "\1\121\5\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\4\13\1\122\24\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\14\13\1\123\3\13" +
                    "\1\124\5\13\1\125\2\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\1\126\3\13\1\127\13\13" +
                    "\1\130\10\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\20\13\1\131\10\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\3\13\1\132\1\13" +
                    "\1\133\5\13\1\134\1\135\14\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\4\13\1\136\24\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\4\13\1\137\3\13\1\140\20\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\1\141\7\13\1\142" +
                    "\4\13\1\143\5\13\1\144\5\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\1\145\14\13\1\146" +
                    "\13\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\1\13\1\147\16\13\1\150\2\13\1\151\5\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\1\152\14\13\1\153\2\13\1\154\10\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\1\155\3\13" +
                    "\1\156\11\13\1\157\12\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\22\13\1\160\1\161\3\13" +
                    "\1\162\1\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\20\13\1\163\6\13\1\164\1\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\14\13" +
                    "\1\165\4\13\1\166\7\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\1\167\30\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\7\13\1\170" +
                    "\21\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\1\171\7\13\1\172\20\13\5\0\2\45\15\0" +
                    "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\0" +
                    "\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\0" +
                    "\1\64\1\65\1\66\1\67\1\70\1\71\1\0\1\72" +
                    "\3\0\1\45\23\0\1\173\1\174\10\0\1\175\3\0" +
                    "\1\176\2\0\1\177\31\0\1\200\3\0\1\201\3\0" +
                    "\1\202\44\0\1\200\6\0\1\203\5\0\1\204\5\0" +
                    "\1\205\35\0\1\206\64\0\1\207\3\0\1\210\5\0" +
                    "\1\211\26\0\1\212\3\0\1\213\13\0\1\214\54\0" +
                    "\1\215\37\0\1\216\1\0\1\217\5\0\1\220\1\221" +
                    "\44\0\1\222\54\0\1\223\3\0\1\224\44\0\1\225" +
                    "\7\0\1\226\4\0\1\227\5\0\1\224\31\0\1\230" +
                    "\14\0\1\231\40\0\1\232\16\0\1\233\2\0\1\234" +
                    "\31\0\1\235\14\0\1\236\2\0\1\237\34\0\1\240" +
                    "\3\0\1\241\11\0\1\242\60\0\1\243\1\244\3\0" +
                    "\1\245\45\0\1\246\6\0\1\247\41\0\1\250\4\0" +
                    "\1\251\33\0\1\252\63\0\1\253\45\0\1\254\7\0" +
                    "\1\255\24\0\3\73\1\74\13\73\1\256\35\73\4\75" +
                    "\1\74\12\75\1\257\35\75\5\76\1\260\47\76\2\77" +
                    "\1\261\52\77\12\0\1\262\51\0\2\101\1\0\2\101" +
                    "\1\0\2\101\1\0\31\101\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\22\13\1\263\6\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\3\13" +
                    "\1\264\25\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\3\13\1\265\23\13\1\266\1\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\6\13" +
                    "\1\267\22\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\6\13\1\270\22\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\21\13\1\271\7\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\12\13\1\272\16\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\22\13\1\273\6\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\21\13\1\274" +
                    "\7\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\15\13\1\275\13\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\14\13\1\276\14\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\20\13" +
                    "\1\277\10\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\5\13\1\300\4\13\1\301\3\13\1\302" +
                    "\2\13\1\303\2\13\1\304\4\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\23\13\1\305\5\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\20\13\1\306\10\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\22\13\1\307\6\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\12\13\1\310" +
                    "\16\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\1\311\30\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\1\312\30\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\15\13\1\313\13\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\4\13\1\314\24\13\13\0\1\315\1\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\31\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\16\13\1\316\12\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\2\13\1\317\13\13\1\320\5\13\1\321\4\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\27\13" +
                    "\1\322\1\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\1\323\13\13\1\324\14\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\21\13\1\325" +
                    "\7\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\14\13\1\326\11\13\1\327\2\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\14\13\1\330" +
                    "\14\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\3\13\1\331\25\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\21\13\1\332\7\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\13\13" +
                    "\1\333\15\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\22\13\1\334\6\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\21\13\1\335\7\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\3\13\1\336\2\13\1\337\22\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\22\13\1\340\6\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\22\13\1\341\6\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\21\13\1\342\7\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\4\13\1\343" +
                    "\24\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\14\13\1\344\14\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\5\13\1\345\10\13\1\346" +
                    "\1\347\4\13\1\350\4\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\2\13\1\351\26\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\1\352" +
                    "\30\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\1\13\1\353\27\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\21\13\1\354\7\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\23\13" +
                    "\1\355\5\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\16\13\1\356\12\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\1\13\1\357\6\13" +
                    "\1\360\20\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\4\13\1\361\24\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\12\13\1\362\16\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\4\13\1\363\24\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\14\13\1\364\14\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\14\13\1\365" +
                    "\14\13\46\0\1\366\35\0\1\367\54\0\1\367\23\0" +
                    "\1\370\33\0\1\371\54\0\1\372\67\0\1\373\45\0" +
                    "\1\374\64\0\1\367\47\0\1\375\53\0\1\376\60\0" +
                    "\1\377\41\0\1\u0100\4\0\1\u0101\3\0\1\u0102\2\0" +
                    "\1\u0103\2\0\1\u0104\53\0\1\u0105\51\0\1\u0106\56\0" +
                    "\1\u0107\44\0\1\200\42\0\1\u0108\54\0\1\u0109\71\0" +
                    "\1\u010a\43\0\1\u010b\37\0\1\u010c\103\0\1\u010d\40\0" +
                    "\1\u010e\13\0\1\u010f\5\0\1\u0110\57\0\1\367\25\0" +
                    "\1\u0111\13\0\1\u0112\61\0\1\202\47\0\1\u0113\11\0" +
                    "\1\u0114\42\0\1\u0114\43\0\1\u0115\64\0\1\u0116\63\0" +
                    "\1\u0117\53\0\1\u0118\14\0\2\u0119\20\0\1\u011a\2\0" +
                    "\1\u011b\70\0\1\u011c\54\0\1\u011d\53\0\1\u011e\37\0" +
                    "\1\u011f\64\0\1\u0120\45\0\1\u0121\10\0\1\u0122\1\u0123" +
                    "\4\0\1\u0124\32\0\1\367\52\0\1\u0125\55\0\1\u0126" +
                    "\74\0\1\u0127\56\0\1\373\47\0\1\u0128\37\0\1\u0129" +
                    "\6\0\1\u012a\50\0\1\u012b\62\0\1\246\46\0\1\u012c" +
                    "\64\0\1\u012d\54\0\1\u012e\20\0\3\73\1\4\13\73" +
                    "\1\256\35\73\4\75\1\5\12\75\1\257\35\75\5\76" +
                    "\1\260\3\76\1\u012f\43\76\12\0\1\u0130\51\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\10\13\1\u0131" +
                    "\20\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\3\13\1\u0132\22\13\1\u0133\2\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\23\13\1\u0134" +
                    "\5\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\13\13\1\u0135\15\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\4\13\1\u0136\24\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\15\13" +
                    "\1\u0137\13\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\4\13\1\u0138\24\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\10\13\1\u0139\20\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\5\13\1\u013a\14\13\1\u013b\6\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\20\13\1\u013c\10\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\1\u013d\30\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\4\13\1\u013e\24\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\20\13\1\u013f\10\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\2\13\1\u0140\26\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\10\13\1\u0141\20\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\13\13\1\u0142" +
                    "\15\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\15\13\1\u0143\13\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\4\13\1\u0144\24\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\21\13" +
                    "\1\u0145\7\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\22\13\1\u0146\6\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\2\13\1\u0147\26\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\23\13\1\u0148\5\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\14\13\1\u0149\14\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\5\13\1\u014a" +
                    "\23\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\15\13\1\u014b\13\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\12\13\1\u014c\16\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\23\13" +
                    "\1\u014d\5\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\4\13\1\u014e\24\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\5\13\1\u014f\23\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\6\13\1\u0150\22\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\22\13\1\u0151\6\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\3\13\1\u0152" +
                    "\25\13\13\0\1\u0153\1\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\31\13\13\0\1\u0154\1\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\31\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\10\13\1\u0155\12\13" +
                    "\1\u0156\5\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\22\13\1\u0157\6\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\4\13\1\u0158\24\13" +
                    "\13\0\1\u0159\1\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\10\13\1\u015a\20\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\15\13\1\u015b\13\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\4\13" +
                    "\1\u015c\24\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\1\u015d\30\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\16\13\1\u015e\12\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\7\13" +
                    "\1\u015f\12\13\1\u0160\6\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\10\13\1\u0161\20\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\5\13" +
                    "\1\u0162\13\13\1\u0163\7\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\6\13\1\u0164\22\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\4\13" +
                    "\1\u0165\3\13\1\u0166\20\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\12\13\1\u0167\16\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\23\13" +
                    "\1\u0168\5\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\10\13\1\u0169\20\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\22\13\1\u016a\6\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\13\13\1\u016b\15\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\22\13\1\u016c\6\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\4\13\1\u016d" +
                    "\24\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\4\13\1\u016e\24\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\15\13\1\u016f\13\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\17\13" +
                    "\1\u0170\2\13\1\u0171\6\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\20\13\1\u0172\1\u0173\7\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\23\13\1\u0174\5\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\14\13\1\u0175\14\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\6\13\1\u0176" +
                    "\22\13\13\0\1\u0177\1\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\31\13\34\0\1\u0178\25\0\2\u0119\75\0" +
                    "\1\u0179\22\0\1\u017a\51\0\1\372\44\0\1\u017b\45\0" +
                    "\1\367\65\0\1\u017c\47\0\1\u017d\51\0\1\u017e\14\0" +
                    "\1\u017f\52\0\1\u017b\34\0\1\u0180\60\0\1\u0181\70\0" +
                    "\1\u0182\36\0\1\u0183\62\0\1\u0184\57\0\1\367\56\0" +
                    "\1\u0185\43\0\1\u0186\72\0\1\u0187\34\0\1\u0188\75\0" +
                    "\1\u0189\45\0\1\u018a\45\0\1\u018b\64\0\1\u018c\51\0" +
                    "\1\u018d\65\0\1\202\35\0\1\u018e\55\0\1\u018f\55\0" +
                    "\1\u0190\51\0\1\u0191\32\0\2\u0119\4\0\1\u0192\75\0" +
                    "\1\u0193\12\0\1\u0194\35\0\1\u0195\31\0\2\u0119\4\0" +
                    "\1\u0196\20\0\1\u0197\61\0\1\u0198\43\0\1\u0199\50\0" +
                    "\1\u019a\72\0\1\u010f\45\0\1\367\12\0\1\u019b\42\0" +
                    "\1\173\51\0\1\u019c\13\0\1\u019d\41\0\1\373\52\0" +
                    "\1\u019e\3\0\1\u019f\56\0\1\u01a0\65\0\1\u01a1\41\0" +
                    "\1\u01a2\66\0\1\u01a3\45\0\1\u01a4\63\0\1\u01a5\36\0" +
                    "\1\u01a6\65\0\1\u01a7\56\0\1\246\2\0\1\u01a8\52\0" +
                    "\2\367\47\0\1\367\46\0\1\u01a9\35\0\1\u01aa\54\0" +
                    "\1\u01ab\54\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\15\13\1\u01ac\13\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\1\u01ad\30\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\13\13\1\u01ae" +
                    "\15\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\13\13\1\u01af\15\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\4\13\1\u01b0\24\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\14\13" +
                    "\1\u01b1\14\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\2\13\1\u01b2\26\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\10\13\1\u01b3\20\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\1\u01b4\30\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\4\13\1\u01b5\24\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\23\13\1\u01b6\5\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\22\13\1\u01b7\6\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\4\13\1\u01b8\24\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\20\13\1\u01b9" +
                    "\10\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\1\u01ba\30\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\20\13\1\u01bb\10\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\14\13\1\u01bc" +
                    "\14\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\4\13\1\u01bd\24\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\23\13\1\u01be\5\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\22\13" +
                    "\1\u01bf\6\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\16\13\1\u01c0\12\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\22\13\1\u01c1\6\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\4\13\1\u01c2\24\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\20\13\1\u01c3\10\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\23\13\1\u01c4" +
                    "\5\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\22\13\1\u01c5\6\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\20\13\1\u01c6\10\13\13\0" +
                    "\1\u01c7\1\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\31\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\22\13\1\u01c8\6\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\1\u01c9\30\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\4\13\1\u01ca" +
                    "\24\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\4\13\1\u01cb\24\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\5\13\1\u01cc\23\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\12\13" +
                    "\1\u01cd\16\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\21\13\1\u01ce\7\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\21\13\1\u01cf\7\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\5\13\1\u01d0\23\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\12\13\1\u01d1\16\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\20\13\1\u01d2" +
                    "\10\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\14\13\1\u01d3\14\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\23\13\1\u01d4\5\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\4\13" +
                    "\1\u01d5\24\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\22\13\1\u01d6\6\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\10\13\1\u01d7\20\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\4\13\1\u01d8\24\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\4\13\1\u01d9\24\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\20\13\1\u01da" +
                    "\10\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\14\13\1\u01db\14\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\1\u01dc\30\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\10\13\1\u01dd" +
                    "\20\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\21\13\1\u01de\7\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\23\13\1\u01df\5\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\15\13" +
                    "\1\u01e0\13\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\4\13\1\u01e1\24\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\3\13\1\u01e2\25\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\23\13\1\u01e3\5\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\23\13\1\u01e4\5\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\21\13\1\u01e5" +
                    "\7\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\4\13\1\u01e6\24\13\13\0\1\u01e7\1\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\31\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\4\13\1\u01e8" +
                    "\24\13\41\0\1\u012c\37\0\1\u01e9\67\0\1\u01ea\45\0" +
                    "\1\u01eb\64\0\1\u01ec\42\0\1\373\62\0\1\u01ed\44\0" +
                    "\1\u01ee\77\0\1\u01ef\53\0\1\373\36\0\1\u01f0\70\0" +
                    "\1\u01f1\34\0\1\u01f2\74\0\1\u01f3\50\0\1\u01f4\63\0" +
                    "\1\u01f5\53\0\1\u01f6\50\0\1\u01f7\60\0\1\u01f8\36\0" +
                    "\1\213\70\0\1\202\57\0\1\u01f9\51\0\1\u01fa\15\0" +
                    "\2\u0119\4\0\1\u01fb\107\0\1\u01fc\32\0\1\u01fd\60\0" +
                    "\1\u01fe\55\0\1\u01ff\61\0\1\373\63\0\1\u0200\54\0" +
                    "\1\u0201\40\0\1\u0202\61\0\1\u0101\62\0\1\u0203\50\0" +
                    "\1\u0204\44\0\1\u0205\60\0\1\u0206\50\0\1\u0207\70\0" +
                    "\1\u019d\50\0\1\373\40\0\1\u017d\64\0\1\u0208\65\0" +
                    "\1\u0209\56\0\1\u01a8\46\0\1\u020a\43\0\1\u0105\31\0" +
                    "\2\u0119\20\0\1\u020b\74\0\1\u020c\52\0\1\367\22\0" +
                    "\1\u020d\71\0\1\u020e\42\0\1\u020f\51\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\14\13\1\u0210\14\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\22\13\1\u0211\6\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\12\13\1\u0212\16\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\4\13\1\u0213" +
                    "\24\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\14\13\1\u0214\14\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\6\13\1\u0215\22\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\4\13" +
                    "\1\u0216\24\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\6\13\1\u0217\22\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\2\13\1\u0218\5\13" +
                    "\1\u0219\20\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\14\13\1\u021a\14\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\12\13\1\u021b\16\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\4\13\1\u021c\24\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\2\13\1\u021d\26\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\10\13\1\u021e" +
                    "\20\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\22\13\1\u021f\6\13\13\0\1\u0220\1\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\31\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\21\13\1\u0221" +
                    "\7\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\20\13\1\u0222\10\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\10\13\1\u0223\20\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\10\13" +
                    "\1\u0224\20\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\10\13\1\u0225\20\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\1\u0226\30\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\22\13" +
                    "\1\u0227\6\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\3\13\1\u0228\25\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\22\13\1\u0229\6\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\12\13\1\u022a\16\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\7\13\1\u022b\21\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\22\13\1\u022c" +
                    "\6\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\12\13\1\u022d\16\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\12\13\1\u022e\16\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\10\13" +
                    "\1\u022f\20\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\4\13\1\u0230\24\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\16\13\1\u0231\12\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\23\13\1\u0232\5\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\10\13\1\u0233\20\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\4\13\1\u0234" +
                    "\24\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\4\13\1\u0235\24\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\10\13\1\u0236\20\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\22\13" +
                    "\1\u0237\6\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\20\13\1\u0238\10\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\10\13\1\u0239\20\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\26\13\1\u023a\2\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\14\13\1\u023b\14\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\4\13\1\u023c" +
                    "\24\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\4\13\1\u023d\24\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\2\13\1\u023e\26\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\20\13" +
                    "\1\u023f\10\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\10\13\1\u0240\20\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\21\13\1\u0241\7\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\3\13\1\u0242\25\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\13\13\1\u0243\15\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\4\13\1\u0244" +
                    "\24\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\14\13\1\u0245\14\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\4\13\1\u0246\24\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\24\13" +
                    "\1\u0247\4\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\12\13\1\u0248\16\13\46\0\1\u0249\44\0" +
                    "\1\367\56\0\1\202\46\0\1\u024a\54\0\1\367\50\0" +
                    "\1\202\5\0\1\u024b\56\0\1\202\44\0\1\u024c\62\0" +
                    "\1\u024d\66\0\1\u024e\21\0\1\u024f\106\0\1\366\53\0" +
                    "\1\373\44\0\1\u0250\54\0\1\u0251\54\0\1\u0252\47\0" +
                    "\1\373\73\0\1\u0253\44\0\1\u0254\51\0\1\367\67\0" +
                    "\1\u0255\44\0\1\u0256\52\0\1\u0257\62\0\1\u01a0\61\0" +
                    "\1\u0258\41\0\1\u0259\50\0\1\u025a\60\0\1\u025b\64\0" +
                    "\1\u012c\62\0\1\367\42\0\1\u017d\60\0\1\u025c\44\0" +
                    "\1\u025d\47\0\1\u025e\55\0\1\u025f\64\0\1\u0260\64\0" +
                    "\1\u0261\42\0\1\u0262\31\0\1\u0263\2\0\1\u0264\51\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\1\u0265" +
                    "\30\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\14\13\1\u0266\14\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\22\13\1\u0267\6\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\21\13" +
                    "\1\u0268\7\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\22\13\1\u0269\6\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\14\13\1\u026a\14\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\22\13\1\u026b\6\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\22\13\1\u026c\6\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\1\u026d\30\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\16\13\1\u026e\12\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\4\13\1\u026f\3\13\1\u0270\20\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\1\u0271\12\13\1\u0272\15\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\10\13\1\u0273\20\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\4\13" +
                    "\1\u0274\24\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\15\13\1\u0275\13\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\14\13\1\u0276\14\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\22\13\1\u0277\6\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\22\13\1\u0278\6\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\4\13\1\u0279" +
                    "\24\13\13\0\1\u027a\1\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\31\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\10\13\1\u027b\20\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\15\13\1\u027c" +
                    "\13\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\4\13\1\u027d\24\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\4\13\1\u027e\24\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\4\13" +
                    "\1\u027f\24\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\1\u0280\30\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\16\13\1\u0281\12\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\2\13" +
                    "\1\u0282\26\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\22\13\1\u0283\6\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\3\13\1\u0284\25\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\30\13\1\u0285\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\14\13\1\u0286\14\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\15\13\1\u0287\13\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\2\13\1\u0288\26\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\14\13\1\u0289\14\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\4\13\1\u028a" +
                    "\24\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\4\13\1\u028b\24\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\15\13\1\u028c\13\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\23\13" +
                    "\1\u028d\5\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\5\13\1\u028e\23\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\3\13\1\u028f\25\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\4\13\1\u0290\24\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\4\13\1\u0291\24\13\24\0\1\367" +
                    "\75\0\1\u0292\47\0\1\u0257\40\0\1\u0293\72\0\1\173" +
                    "\42\0\1\367\3\0\1\u0178\44\0\1\u0294\12\0\1\u0295" +
                    "\56\0\1\u0296\53\0\1\u01ed\62\0\1\222\21\0\1\u0297" +
                    "\75\0\1\224\61\0\1\u0298\43\0\1\u0299\54\0\1\u029a" +
                    "\66\0\1\u029b\40\0\1\u029c\55\0\1\u029d\101\0\1\u029c" +
                    "\30\0\1\u029e\65\0\1\u029f\62\0\1\u0194\36\0\1\367" +
                    "\52\0\1\u02a0\55\0\1\u02a1\54\0\1\372\42\0\1\u02a2" +
                    "\51\0\1\u0263\54\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\22\13\1\u02a3\6\13\13\0\1\u02a4\1\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\31\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\4\13" +
                    "\1\u02a5\24\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\22\13\1\u02a6\6\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\22\13\1\u02a7\6\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\15\13\1\u02a8\13\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\16\13\1\u02a9\12\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\4\13\1\u02aa" +
                    "\24\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\15\13\1\u02ab\13\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\14\13\1\u02ac\14\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\6\13" +
                    "\1\u02ad\22\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\27\13\1\u02ae\1\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\23\13\1\u02af\5\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\13\13\1\u02b0\15\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\21\13\1\u02b1\7\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\20\13\1\u02b2" +
                    "\10\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\13\13\1\u02b3\15\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\13\13\1\u02b4\15\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\20\13" +
                    "\1\u02b5\10\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\2\13\1\u02b6\26\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\16\13\1\u02b7\12\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\1\u02b8\30\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\4\13\1\u02b9\24\13\13\0\1\u02ba\1\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\31\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\1\u02bb" +
                    "\30\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\14\13\1\u02bc\14\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\4\13\1\u02bd\24\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\2\13" +
                    "\1\u02be\26\13\13\0\1\u02bf\1\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\31\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\14\13\1\u02c0\14\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\12\13" +
                    "\1\u02c1\16\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\4\13\1\u02c2\24\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\20\13\1\u02c3\10\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\13\13\1\u02c4\15\13\13\0\1\u02c5\107\0\1\u02a0\50\0" +
                    "\1\u02c6\42\0\1\u02c7\64\0\1\u02c8\53\0\1\u02c9\61\0" +
                    "\1\222\47\0\1\u02ca\61\0\1\367\52\0\1\u02cb\36\0" +
                    "\1\173\43\0\1\u02cc\54\0\1\u02cd\101\0\1\u02ce\44\0" +
                    "\1\174\70\0\1\u01f4\26\0\1\u02cf\51\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\22\13\1\u02d0\6\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\20\13\1\u02d1\10\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\4\13\1\u02d2\24\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\10\13\1\u02d3" +
                    "\20\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\14\13\1\u02d4\14\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\16\13\1\u02d5\12\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\21\13" +
                    "\1\u02d6\7\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\14\13\1\u02d7\14\13\13\0\1\u02d8\1\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\31\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\20\13" +
                    "\1\u02d9\10\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\1\u02da\30\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\22\13\1\u02db\6\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\27\13" +
                    "\1\u02dc\1\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\4\13\1\u02dd\24\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\4\13\1\u02de\24\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\4\13\1\u02df\24\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\15\13\1\u02e0\13\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\22\13\1\u02e1" +
                    "\6\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\1\13\1\u02e2\27\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\22\13\1\u02e3\6\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\4\13" +
                    "\1\u02e4\24\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\10\13\1\u02e5\20\13\13\0\1\u02e6\1\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\31\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\4\13" +
                    "\1\u02e7\24\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\3\13\1\u02e8\25\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\21\13\1\u02e9\7\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\4\13\1\u02ea\24\13\46\0\1\u02eb\50\0\1\u02ec\57\0" +
                    "\1\u02ed\22\0\1\u02ee\65\0\1\u02ef\60\0\1\u02f0\65\0" +
                    "\1\u02f1\40\0\1\222\63\0\1\u02f2\25\0\2\u0119\4\0" +
                    "\1\u02f3\54\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\15\13\1\u02f4\13\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\3\13\1\u02f5\25\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\15\13" +
                    "\1\u02f6\13\13\13\0\1\u02f7\1\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\31\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\21\13\1\u02f8\7\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\3\13" +
                    "\1\u02f9\25\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\4\13\1\u02fa\24\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\22\13\1\u02fb\6\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\14\13\1\u02fc\14\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\14\13\1\u02fd\14\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\20\13\1\u02fe" +
                    "\10\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\10\13\1\u02ff\20\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\27\13\1\u0300\1\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\10\13" +
                    "\1\u0301\20\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\14\13\1\u0302\14\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\3\13\1\u0303\25\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\10\13\1\u0304\20\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\14\13\1\u0305\14\13\41\0\1\367" +
                    "\26\0\1\u0306\106\0\1\u0307\36\0\1\u0308\73\0\1\u0309" +
                    "\46\0\1\u030a\60\0\1\u0293\50\0\1\u030b\43\0\1\u030c" +
                    "\40\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\14\13\1\u030d\14\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\22\13\1\u030e\6\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\1\u030f\30\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\10\13\1\u0310\20\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\2\13\1\u0311\26\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\22\13\1\u0312" +
                    "\6\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\22\13\1\u0313\6\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\22\13\1\u0314\6\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\15\13" +
                    "\1\u0315\13\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\15\13\1\u0316\13\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\21\13\1\u0317\7\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\1\u0318\30\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\15\13\1\u0319\13\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\22\13\1\u031a\6\13" +
                    "\46\0\1\u031b\32\0\1\u0120\64\0\1\u031c\46\0\1\u01fc" +
                    "\74\0\1\u01a8\53\0\1\u031d\33\0\1\u0181\43\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\1\u031e\30\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\6\13\1\u031f\22\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\6\13\1\u0320\22\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\7\13\1\u0321" +
                    "\21\13\13\0\2\13\1\0\1\13\1\101\1\0\2\13" +
                    "\1\0\21\13\1\u0322\7\13\13\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\21\13\1\u0323\7\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\4\13" +
                    "\1\u0324\24\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\14\13\1\u0325\14\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\14\13\1\u0326\14\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\22\13\1\u0327\6\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\22\13\1\u0328\6\13\13\0\2\13" +
                    "\1\0\1\13\1\101\1\0\2\13\1\0\14\13\1\u0329" +
                    "\14\13\24\0\1\u01ed\62\0\1\u032a\70\0\1\u032b\21\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\6\13" +
                    "\1\u032c\22\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\4\13\1\u032d\24\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\10\13\1\u032e\20\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\3\13\1\u032f\25\13\13\0\2\13\1\0\1\13\1\101" +
                    "\1\0\2\13\1\0\1\u0330\30\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\4\13\1\u0331\24\13" +
                    "\34\0\1\u030a\44\0\1\u0207\43\0\2\13\1\0\1\13" +
                    "\1\101\1\0\2\13\1\0\22\13\1\u0332\6\13\13\0" +
                    "\2\13\1\0\1\13\1\101\1\0\2\13\1\0\14\13" +
                    "\1\u0333\14\13\13\0\2\13\1\0\1\13\1\101\1\0" +
                    "\2\13\1\0\21\13\1\u0334\7\13\13\0\2\13\1\0" +
                    "\1\13\1\101\1\0\2\13\1\0\2\13\1\u0335\26\13" +
                    "\13\0\2\13\1\0\1\13\1\101\1\0\2\13\1\0" +
                    "\4\13\1\u0336\24\13\4\0";

    private static int[] zzUnpacktrans() {
        int[] result = new int[32805];
        int offset = 0;
        offset = zzUnpacktrans(ZZ_TRANS_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpacktrans(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            value--;
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }


    /* error codes */
    private static final int ZZ_UNKNOWN_ERROR = 0;
    private static final int ZZ_NO_MATCH = 1;
    private static final int ZZ_PUSHBACK_2BIG = 2;

    /* error messages for the codes above */
    private static final String[] ZZ_ERROR_MSG = {
            "Unknown internal scanner error",
            "Error: could not match input",
            "Error: pushback value was too large"
    };

    /**
     * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
     */
    private static final int[] ZZ_ATTRIBUTE = zzUnpackAttribute();

    private static final String ZZ_ATTRIBUTE_PACKED_0 =
            "\1\0\4\1\1\11\3\1\1\11\27\1\2\11\27\0" +
                    "\1\1\1\11\3\1\1\0\3\1\2\11\65\1\63\0" +
                    "\2\1\1\0\1\11\1\0\103\1\43\0\1\1\25\0" +
                    "\1\11\1\0\107\1\64\0\75\1\47\0\71\1\34\0" +
                    "\55\1\20\0\43\1\12\0\1\11\33\1\11\0\22\1" +
                    "\7\0\16\1\3\0\14\1\2\0\13\1";

    private static int[] zzUnpackAttribute() {
        int[] result = new int[822];
        int offset = 0;
        offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAttribute(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }

    /**
     * the input device
     */
    private java.io.Reader zzReader;

    /**
     * the current state of the DFA
     */
    private int zzState;

    /**
     * the current lexical state
     */
    private int zzLexicalState = YYINITIAL;

    /**
     * this buffer contains the current text to be matched and is
     * the source of the yytext() string
     */
    private CharSequence zzBuffer = "";

    /**
     * the textposition at the last accepting state
     */
    private int zzMarkedPos;

    /**
     * the current text position in the buffer
     */
    private int zzCurrentPos;

    /**
     * startRead marks the beginning of the yytext() string in the buffer
     */
    private int zzStartRead;

    /**
     * endRead marks the last character in the buffer, that has been read
     * from input
     */
    private int zzEndRead;

    /**
     * zzAtEOF == true <=> the scanner is at the EOF
     */
    private boolean zzAtEOF;

    /**
     * Number of newlines encountered up to the start of the matched text.
     */
    @SuppressWarnings("unused")
    private int yyline;

    /**
     * Number of characters from the last newline up to the start of the matched text.
     */
    @SuppressWarnings("unused")
    protected int yycolumn;

    /**
     * Number of characters up to the start of the matched text.
     */
    @SuppressWarnings("unused")
    private long yychar;

    /**
     * Whether the scanner is currently at the beginning of a line.
     */
    @SuppressWarnings("unused")
    private boolean zzAtBOL = true;

    /**
     * Whether the user-EOF-code has already been executed.
     */
    @SuppressWarnings("unused")
    private boolean zzEOFDone;

    /* user code: */
    public _YangLexer() {
        this((java.io.Reader) null);
    }


    /**
     * Creates a new scanner
     *
     * @param in the java.io.Reader to read input from.
     */
    public _YangLexer(java.io.Reader in) {
        this.zzReader = in;
    }


    /**
     * Returns the maximum size of the scanner buffer, which limits the size of tokens.
     */
    private int zzMaxBufferLen() {
        return Integer.MAX_VALUE;
    }

    /**
     * Whether the scanner buffer can grow to accommodate a larger token.
     */
    private boolean zzCanGrow() {
        return true;
    }

    /**
     * Translates raw input code points to DFA table row
     */
    private static int zzCMap(int input) {
        int offset = input & 255;
        return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];
    }

    public final int getTokenStart() {
        return zzStartRead;
    }

    public final int getTokenEnd() {
        return getTokenStart() + yylength();
    }

    public void reset(CharSequence buffer, int start, int end, int initialState) {
        zzBuffer = buffer;
        zzCurrentPos = zzMarkedPos = zzStartRead = start;
        zzAtEOF = false;
        zzAtBOL = true;
        zzEndRead = end;
        yybegin(initialState);
    }

    /**
     * Refills the input buffer.
     *
     * @return {@code false}, iff there was new input.
     * @throws java.io.IOException if any I/O-Error occurs
     */
    private boolean zzRefill() throws java.io.IOException {
        return true;
    }


    /**
     * Returns the current lexical state.
     */
    public final int yystate() {
        return zzLexicalState;
    }


    /**
     * Enters a new lexical state
     *
     * @param newState the new lexical state
     */
    public final void yybegin(int newState) {
        zzLexicalState = newState;
    }


    /**
     * Returns the text matched by the current regular expression.
     */
    public final CharSequence yytext() {
        return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
    }


    /**
     * Returns the character at position {@code pos} from the
     * matched text.
     * <p>
     * It is equivalent to yytext().charAt(pos), but faster
     *
     * @param pos the position of the character to fetch.
     *            A value from 0 to yylength()-1.
     * @return the character at position pos
     */
    public final char yycharat(int pos) {
        return zzBuffer.charAt(zzStartRead + pos);
    }


    /**
     * Returns the length of the matched text region.
     */
    public final int yylength() {
        return zzMarkedPos - zzStartRead;
    }


    /**
     * Reports an error that occurred while scanning.
     * <p>
     * In a wellformed scanner (no or only correct usage of
     * yypushback(int) and a match-all fallback rule) this method
     * will only be called with things that "Can't Possibly Happen".
     * If this method is called, something is seriously wrong
     * (e.g. a JFlex bug producing a faulty scanner etc.).
     * <p>
     * Usual syntax/scanner level error handling should be done
     * in error fallback rules.
     *
     * @param errorCode the code of the errormessage to display
     */
    private void zzScanError(int errorCode) {
        String message;
        try {
            message = ZZ_ERROR_MSG[errorCode];
        } catch (ArrayIndexOutOfBoundsException e) {
            message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
        }

        throw new Error(message);
    }


    /**
     * Pushes the specified amount of characters back into the input stream.
     * <p>
     * They will be read again by then next call of the scanning method
     *
     * @param number the number of characters to be read again.
     *               This number must not be greater than yylength()!
     */
    public void yypushback(int number) {
        if (number > yylength())
            zzScanError(ZZ_PUSHBACK_2BIG);

        zzMarkedPos -= number;
    }


    /**
     * Resumes scanning until the next regular expression is matched,
     * the end of input is encountered or an I/O-Error occurs.
     *
     * @return the next token
     * @throws java.io.IOException if any I/O-Error occurs
     */
    public IElementType advance() throws java.io.IOException {
        int zzInput;
        int zzAction;

        // cached fields:
        int zzCurrentPosL;
        int zzMarkedPosL;
        int zzEndReadL = zzEndRead;
        CharSequence zzBufferL = zzBuffer;

        int[] zzTransL = ZZ_TRANS;
        int[] zzRowMapL = ZZ_ROWMAP;
        int[] zzAttrL = ZZ_ATTRIBUTE;

        while (true) {
            zzMarkedPosL = zzMarkedPos;

            zzAction = -1;

            zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

            zzState = ZZ_LEXSTATE[zzLexicalState];

            // set up zzAction for empty match case:
            int zzAttributes = zzAttrL[zzState];
            if ((zzAttributes & 1) == 1) {
                zzAction = zzState;
            }


            zzForAction:
            {
                while (true) {

                    if (zzCurrentPosL < zzEndReadL) {
                        zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
                        zzCurrentPosL += Character.charCount(zzInput);
                    } else if (zzAtEOF) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        // store back cached positions
                        zzCurrentPos = zzCurrentPosL;
                        zzMarkedPos = zzMarkedPosL;
                        boolean eof = zzRefill();
                        // get translated positions and possibly new buffer
                        zzCurrentPosL = zzCurrentPos;
                        zzMarkedPosL = zzMarkedPos;
                        zzBufferL = zzBuffer;
                        zzEndReadL = zzEndRead;
                        if (eof) {
                            zzInput = YYEOF;
                            break zzForAction;
                        } else {
                            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
                            zzCurrentPosL += Character.charCount(zzInput);
                        }
                    }
                    int zzNext = zzTransL[zzRowMapL[zzState] + zzCMap(zzInput)];
                    if (zzNext == -1) break zzForAction;
                    zzState = zzNext;

                    zzAttributes = zzAttrL[zzState];
                    if ((zzAttributes & 1) == 1) {
                        zzAction = zzState;
                        zzMarkedPosL = zzCurrentPosL;
                        if ((zzAttributes & 8) == 8) break zzForAction;
                    }

                }
            }

            // store back cached position
            zzMarkedPos = zzMarkedPosL;

            if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
                zzAtEOF = true;
                return null;
            } else {
                switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
                    case 1: {
                        return YANG_H_NON_WORD;
                    }
                    // fall through
                    case 103:
                        break;
                    case 2: {
                        return WHITE_SPACE;
                    }
                    // fall through
                    case 104:
                        break;
                    case 3: {
                        return YANG_H_STRING;
                    }
                    // fall through
                    case 105:
                        break;
                    case 4: {
                        return YANG_H_OPERATORS;
                    }
                    // fall through
                    case 106:
                        break;
                    case 5: {
                        return YANG_H_DIGIT;
                    }
                    // fall through
                    case 107:
                        break;
                    case 6: {
                        return YANG_H_SEMICOLON;
                    }
                    // fall through
                    case 108:
                        break;
                    case 7: {
                        return YANG_H_IDENTIFIER;
                    }
                    // fall through
                    case 109:
                        break;
                    case 8: {
                        return YANG_H_LEFT_BRACE;
                    }
                    // fall through
                    case 110:
                        break;
                    case 9: {
                        return YANG_H_RIGHT_BRACE;
                    }
                    // fall through
                    case 111:
                        break;
                    case 10: {
                        return YANG_H_BLOCK_COMMENT;
                    }
                    // fall through
                    case 112:
                        break;
                    case 11: {
                        return YANG_H_SINGLE_LINE_COMMENT;
                    }
                    // fall through
                    case 113:
                        break;
                    case 12: {
                        return YANG_H_EXTENSION_IDENTIFIER;
                    }
                    // fall through
                    case 114:
                        break;
                    case 13: {
                        return YANG_H_INVALID_ESCAPE;
                    }
                    // fall through
                    case 115:
                        break;
                    case 14: {
                        return YANG_H_VALID_ESCAPE;
                    }
                    // fall through
                    case 116:
                        break;
                    case 15: {
                        return YANG_H_OR_KEYWORD;
                    }
                    // fall through
                    case 117:
                        break;
                    case 16: {
                        return YANG_H_ADD_KEYWORD;
                    }
                    // fall through
                    case 118:
                        break;
                    case 17: {
                        return YANG_H_AND_KEYWORD;
                    }
                    // fall through
                    case 119:
                        break;
                    case 18: {
                        return YANG_H_BIT_KEYWORD;
                    }
                    // fall through
                    case 120:
                        break;
                    case 19: {
                        return YANG_H_KEY_KEYWORD;
                    }
                    // fall through
                    case 121:
                        break;
                    case 20: {
                        return YANG_H_MAX_KEYWORD;
                    }
                    // fall through
                    case 122:
                        break;
                    case 21: {
                        return YANG_H_MIN_KEYWORD;
                    }
                    // fall through
                    case 123:
                        break;
                    case 22: {
                        return YANG_H_NOT_KEYWORD;
                    }
                    // fall through
                    case 124:
                        break;
                    case 23: {
                        return YANG_H_RPC_KEYWORD;
                    }
                    // fall through
                    case 125:
                        break;
                    case 24: {
                        return YANG_H_KEYWORD_MATCHER;
                    }
                    // fall through
                    case 126:
                        break;
                    case 25: {
                        return YANG_H_BASE_KEYWORD;
                    }
                    // fall through
                    case 127:
                        break;
                    case 26: {
                        return YANG_H_CASE_KEYWORD;
                    }
                    // fall through
                    case 128:
                        break;
                    case 27: {
                        return YANG_H_ENUM_KEYWORD;
                    }
                    // fall through
                    case 129:
                        break;
                    case 28: {
                        return YANG_H_LEAF_KEYWORD;
                    }
                    // fall through
                    case 130:
                        break;
                    case 29: {
                        return YANG_H_LIST_KEYWORD;
                    }
                    // fall through
                    case 131:
                        break;
                    case 30: {
                        return YANG_H_MUST_KEYWORD;
                    }
                    // fall through
                    case 132:
                        break;
                    case 31: {
                        return YANG_H_PATH_KEYWORD;
                    }
                    // fall through
                    case 133:
                        break;
                    case 32: {
                        return YANG_H_TRUE_KEYWORD;
                    }
                    // fall through
                    case 134:
                        break;
                    case 33: {
                        return YANG_H_TYPE_KEYWORD;
                    }
                    // fall through
                    case 135:
                        break;
                    case 34: {
                        return YANG_H_USER_KEYWORD;
                    }
                    // fall through
                    case 136:
                        break;
                    case 35: {
                        return YANG_H_USES_KEYWORD;
                    }
                    // fall through
                    case 137:
                        break;
                    case 36: {
                        return YANG_H_WHEN_KEYWORD;
                    }
                    // fall through
                    case 138:
                        break;
                    case 37: {
                        return YANG_H_FALSE_KEYWORD;
                    }
                    // fall through
                    case 139:
                        break;
                    case 38: {
                        return YANG_H_INPUT_KEYWORD;
                    }
                    // fall through
                    case 140:
                        break;
                    case 39: {
                        return YANG_H_RANGE_KEYWORD;
                    }
                    // fall through
                    case 141:
                        break;
                    case 40: {
                        return YANG_H_UNITS_KEYWORD;
                    }
                    // fall through
                    case 142:
                        break;
                    case 41: {
                        return YANG_H_VALUE_KEYWORD;
                    }
                    // fall through
                    case 143:
                        break;
                    case 42: {
                        return YANG_H_ACTION_KEYWORD;
                    }
                    // fall through
                    case 144:
                        break;
                    case 43: {
                        return YANG_H_ANYXML_KEYWORD;
                    }
                    // fall through
                    case 145:
                        break;
                    case 44: {
                        return YANG_H_CHOICE_KEYWORD;
                    }
                    // fall through
                    case 146:
                        break;
                    case 45: {
                        return YANG_H_CONFIG_KEYWORD;
                    }
                    // fall through
                    case 147:
                        break;
                    case 46: {
                        return YANG_H_DELETE_KEYWORD;
                    }
                    // fall through
                    case 148:
                        break;
                    case 47: {
                        return YANG_H_IMPORT_KEYWORD;
                    }
                    // fall through
                    case 149:
                        break;
                    case 48: {
                        return YANG_H_LENGTH_KEYWORD;
                    }
                    // fall through
                    case 150:
                        break;
                    case 49: {
                        return YANG_H_MODULE_KEYWORD;
                    }
                    // fall through
                    case 151:
                        break;
                    case 50: {
                        return YANG_H_OUTPUT_KEYWORD;
                    }
                    // fall through
                    case 152:
                        break;
                    case 51: {
                        return YANG_H_PREFIX_KEYWORD;
                    }
                    // fall through
                    case 153:
                        break;
                    case 52: {
                        return YANG_H_REFINE_KEYWORD;
                    }
                    // fall through
                    case 154:
                        break;
                    case 53: {
                        return YANG_H_STATUS_KEYWORD;
                    }
                    // fall through
                    case 155:
                        break;
                    case 54: {
                        return YANG_H_SYSTEM_KEYWORD;
                    }
                    // fall through
                    case 156:
                        break;
                    case 55: {
                        return YANG_H_UNIQUE_KEYWORD;
                    }
                    // fall through
                    case 157:
                        break;
                    case 56: {
                        return YANG_H_ANYDATA_KEYWORD;
                    }
                    // fall through
                    case 158:
                        break;
                    case 57: {
                        return YANG_H_AUGMENT_KEYWORD;
                    }
                    // fall through
                    case 159:
                        break;
                    case 58: {
                        return YANG_H_CONTACT_KEYWORD;
                    }
                    // fall through
                    case 160:
                        break;
                    case 59: {
                        return YANG_H_CURRENT_KEYWORD;
                    }
                    // fall through
                    case 161:
                        break;
                    case 60: {
                        return YANG_H_DEFAULT_KEYWORD;
                    }
                    // fall through
                    case 162:
                        break;
                    case 61: {
                        return YANG_H_DEVIATE_KEYWORD;
                    }
                    // fall through
                    case 163:
                        break;
                    case 62: {
                        return YANG_H_FEATURE_KEYWORD;
                    }
                    // fall through
                    case 164:
                        break;
                    case 63: {
                        return YANG_H_INCLUDE_KEYWORD;
                    }
                    // fall through
                    case 165:
                        break;
                    case 64: {
                        return YANG_H_PATTERN_KEYWORD;
                    }
                    // fall through
                    case 166:
                        break;
                    case 65: {
                        return YANG_H_REPLACE_KEYWORD;
                    }
                    // fall through
                    case 167:
                        break;
                    case 66: {
                        return YANG_H_TYPEDEF_KEYWORD;
                    }
                    // fall through
                    case 168:
                        break;
                    case 67: {
                        return YANG_H_DATE_ARG;
                    }
                    // fall through
                    case 169:
                        break;
                    case 68: {
                        return YANG_H_ARGUMENT_KEYWORD;
                    }
                    // fall through
                    case 170:
                        break;
                    case 69: {
                        return YANG_H_GROUPING_KEYWORD;
                    }
                    // fall through
                    case 171:
                        break;
                    case 70: {
                        return YANG_H_IDENTITY_KEYWORD;
                    }
                    // fall through
                    case 172:
                        break;
                    case 71: {
                        return YANG_H_MODIFIER_KEYWORD;
                    }
                    // fall through
                    case 173:
                        break;
                    case 72: {
                        return YANG_H_OBSOLETE_KEYWORD;
                    }
                    // fall through
                    case 174:
                        break;
                    case 73: {
                        return YANG_H_POSITION_KEYWORD;
                    }
                    // fall through
                    case 175:
                        break;
                    case 74: {
                        return YANG_H_PRESENCE_KEYWORD;
                    }
                    // fall through
                    case 176:
                        break;
                    case 75: {
                        return YANG_H_REVISION_KEYWORD;
                    }
                    // fall through
                    case 177:
                        break;
                    case 76: {
                        return YANG_H_CONTAINER_KEYWORD;
                    }
                    // fall through
                    case 178:
                        break;
                    case 77: {
                        return YANG_H_DEVIATION_KEYWORD;
                    }
                    // fall through
                    case 179:
                        break;
                    case 78: {
                        return YANG_H_EXTENSION_KEYWORD;
                    }
                    // fall through
                    case 180:
                        break;
                    case 79: {
                        return YANG_H_LEAF_LIST_KEYWORD;
                    }
                    // fall through
                    case 181:
                        break;
                    case 80: {
                        return YANG_H_MANDATORY_KEYWORD;
                    }
                    // fall through
                    case 182:
                        break;
                    case 81: {
                        return YANG_H_NAMESPACE_KEYWORD;
                    }
                    // fall through
                    case 183:
                        break;
                    case 82: {
                        return YANG_H_REFERENCE_KEYWORD;
                    }
                    // fall through
                    case 184:
                        break;
                    case 83: {
                        return YANG_H_SUBMODULE_KEYWORD;
                    }
                    // fall through
                    case 185:
                        break;
                    case 84: {
                        return YANG_H_UNBOUNDED_KEYWORD;
                    }
                    // fall through
                    case 186:
                        break;
                    case 85: {
                        return YANG_H_BELONGS_TO_KEYWORD;
                    }
                    // fall through
                    case 187:
                        break;
                    case 86: {
                        return YANG_H_DEPRECATED_KEYWORD;
                    }
                    // fall through
                    case 188:
                        break;
                    case 87: {
                        return YANG_H_IF_FEATURE_KEYWORD;
                    }
                    // fall through
                    case 189:
                        break;
                    case 88: {
                        return YANG_H_ORDERED_BY_KEYWORD;
                    }
                    // fall through
                    case 190:
                        break;
                    case 89: {
                        return YANG_H_DESCRIPTION_KEYWORD;
                    }
                    // fall through
                    case 191:
                        break;
                    case 90: {
                        return YANG_H_YIN_ELEMENT_KEYWORD;
                    }
                    // fall through
                    case 192:
                        break;
                    case 91: {
                        return YANG_H_INVERT_MATCH_KEYWORD;
                    }
                    // fall through
                    case 193:
                        break;
                    case 92: {
                        return YANG_H_MAX_ELEMENTS_KEYWORD;
                    }
                    // fall through
                    case 194:
                        break;
                    case 93: {
                        return YANG_H_MIN_ELEMENTS_KEYWORD;
                    }
                    // fall through
                    case 195:
                        break;
                    case 94: {
                        return YANG_H_NOTIFICATION_KEYWORD;
                    }
                    // fall through
                    case 196:
                        break;
                    case 95: {
                        return YANG_H_ORGANIZATION_KEYWORD;
                    }
                    // fall through
                    case 197:
                        break;
                    case 96: {
                        return YANG_H_YANG_VERSION_KEYWORD;
                    }
                    // fall through
                    case 198:
                        break;
                    case 97: {
                        return YANG_H_ERROR_APP_TAG_KEYWORD;
                    }
                    // fall through
                    case 199:
                        break;
                    case 98: {
                        return YANG_H_ERROR_MESSAGE_KEYWORD;
                    }
                    // fall through
                    case 200:
                        break;
                    case 99: {
                        return YANG_H_NOT_SUPPORTED_KEYWORD;
                    }
                    // fall through
                    case 201:
                        break;
                    case 100: {
                        return YANG_H_REVISION_DATE_KEYWORD;
                    }
                    // fall through
                    case 202:
                        break;
                    case 101: {
                        return YANG_H_FRACTION_DIGITS_KEYWORD;
                    }
                    // fall through
                    case 203:
                        break;
                    case 102: {
                        return YANG_H_REQUIRE_INSTANCE_KEYWORD;
                    }
                    // fall through
                    case 204:
                        break;
                    default:
                        zzScanError(ZZ_NO_MATCH);
                }
            }
        }
    }


}
