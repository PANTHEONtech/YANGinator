<!--
  ~ /*
  ~   Copyright (c) 2021 PANTHEON.tech, s.r.o. All rights reserved.
  ~
  ~   This program and the accompanying materials are made available under the
  ~   terms of the Eclipse Public License v1.0 which accompanies this distribution,
  ~   and is available at http://www.eclipse.org/legal/epl-v10.html
  ~  */
  -->

<idea-plugin>
    <id>tech.pantheon.yanginator</id>
    <name>YANGinator</name>
    <category>Custom Languages</category>
    <vendor email="info@pantheon.tech" url="https://pantheon.tech">Pantheon.tech</vendor>

    <description><![CDATA[
       <h3>Plugin adds support for language Yang.</h3>
       YANG is a data modeling language used to model configuration and
       state data manipulated by the Network Configuration Protocol (NETCONF),
       NETCONF remote procedure calls, and NETCONF notifications.
    ]]></description>

    <change-notes><![CDATA[
        <b>New Features</b>
        <ul>
          <li>Included grouping statements in breadcrumbs</li>
          <li>Properly checking identifier's start character</li>
          <li>Added annotator to check for multiplicity of statements</li>
        </ul>
        <br>
        <b>Fixed issues</b>
        <ul>
          <li>Fixed "Go to" declaration</li>
          <li>Fixed issues with deviate not-supported</li>
        </ul>
    ]]>
    </change-notes>

    <idea-version since-build="202.6397.94"/>

    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.java</depends>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Language -->
        <lang.commenter language="yang-pantheon"
                        implementationClass="tech.pantheon.yanginator.plugin.YangCommenter"/>
        <fileType name="Yang file" implementationClass="tech.pantheon.yanginator.plugin.YangFileType"
                  fieldName="INSTANCE" language="yang-pantheon" extensions="yang"/>
        <lang.parserDefinition
                language="yang-pantheon"
                implementationClass="tech.pantheon.yanginator.plugin.YangParserDefinition"/>

        <!-- Folding -->
        <lang.foldingBuilder language="yang-pantheon"
                             implementationClass=
                                     "tech.pantheon.yanginator.plugin.foldingManager.YangCurlyBraceFoldingManager"/>
        <lang.foldingBuilder language="yang-pantheon"
                             implementationClass=
                                     "tech.pantheon.yanginator.plugin.foldingManager.YangDescriptionFoldingManager"/>
        <lang.foldingBuilder language="yang-pantheon"
                             implementationClass=
                                     "tech.pantheon.yanginator.plugin.foldingManager.YangCommentFoldingManager"/>

        <!-- Highlighter -->
        <lang.syntaxHighlighterFactory language="yang-pantheon"
                                       implementationClass="tech.pantheon.yanginator.plugin.editor.YangSyntaxHighlighterFactory"/>

        <!-- Commenter -->
        <lang.commenter language="yang-pantheon"
                        implementationClass="tech.pantheon.yanginator.plugin.YangCommenter"/>

        <!-- Editor -->
        <lang.braceMatcher language="yang-pantheon"
                           implementationClass="tech.pantheon.yanginator.plugin.editor.YangPairedCurlyBraceMatcher"/>
        <colorSettingsPage implementation="tech.pantheon.yanginator.plugin.editor.YangColorSettingsPage"/>

        <!-- Formatter -->
        <lang.formatter language="yang-pantheon"
                        implementationClass="tech.pantheon.yanginator.plugin.formatter.YangFormattingModelBuilder"/>
        <codeStyleSettingsProvider implementation="tech.pantheon.yanginator.plugin.formatter.settings.YangCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider
                implementation="tech.pantheon.yanginator.plugin.formatter.settings.YangLanguageCodeStyleSettingsProvider"/>

        <!-- Completion -->
        <completion.contributor language="yang-pantheon"
                                implementationClass="tech.pantheon.yanginator.plugin.completion.YangCompletionContributor"/>
        <lang.foldingBuilder language="yang-pantheon"
                             implementationClass="tech.pantheon.yanginator.plugin.completion.YangCompletionContributorBuilder"/>
        <psi.treeChangeListener implementation="tech.pantheon.yanginator.plugin.completion.YangPsiTreeChangeListener"/>

        <!-- Reference -->
        <psi.referenceContributor language="yang-pantheon"
                                  implementation="tech.pantheon.yanginator.plugin.reference.YangReferenceContributor"/>

        <!-- Breadcrumbs -->
        <breadcrumbsInfoProvider implementation="tech.pantheon.yanginator.plugin.breadcrumbs.YangBreadcrumbsProvider"/>
        <breadcrumbsPresentationProvider implementation="tech.pantheon.yanginator.plugin.breadcrumbs.YangBreadcrumbsPresentationProvider"/>

        <!-- Annotator -->
        <annotator language="yang-pantheon" implementationClass="tech.pantheon.yanginator.plugin.annotator.YangAnnotator"/>
    </extensions>
</idea-plugin>