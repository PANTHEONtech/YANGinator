/*
 * Copyright (c) 2021 PANTHEON.tech, s.r.o. All rights reserved.
 *
 *   This program and the accompanying materials are made available
 *   under the
 *   terms of the Eclipse Public License v1.0 which accompanies this
 *   distribution,  and is available at http://www.eclipse.org/legal/epl-v1.html
 */

URI ::= scheme ":" hier-part [ "?" query ] [ "#" fragment ]

hier-part ::= "//" authority path-abempty
  | path-absolute
  | path-rootless
  | path-empty

URI-reference ::= URI | relative-ref

absolute-URI ::= scheme ":" hier-part [ "?" query ]

relative-ref ::= relative-part [ "?" query ] [ "#" fragment ]

relative-part ::= "//" authority path-abempty
  | path-absolute
  | path-noscheme
  | path-empty

scheme ::= ALPHA ( ALPHA | DIGIT | "+" | "-" | "." )*

authority ::= [ userinfo "@" ] host [ ":" port ]
userinfo ::= ( unreserved | pct-encoded | sub-delims | ":" )*
host ::= IP-literal | IPv4address | reg-name
port ::= DIGIT*

IP-literal ::= "[" ( IPv6address | IPvFuture ) "]"

IPvFuture ::= "v" HEXDIG+ "." ( unreserved | sub-delims | ":" )+

IPv6address ::= ( h16 ":" ) ( h16 ":" ) ( h16 ":" ) ( h16 ":" ) ( h16 ":" ) ( h16 ":" ) ls32
  |  "::" ( h16 ":" ) ( h16 ":" ) ( h16 ":" ) ( h16 ":" ) ( h16 ":" ) ls32
  | [  h16 ] "::" ( h16 ":" ) ( h16 ":" ) ( h16 ":" ) ( h16 ":" ) ls32
  | [ [ h16 ":" ] h16 ] "::" ( h16 ":" ) ( h16 ":" ) ( h16 ":" ) ls32
  | [ [ h16 ":" ][ h16 ":" ] h16 ] "::" ( h16 ":" ) ( h16 ":" ) ls32
  | [ [ h16 ":" ][ h16 ":" ][ h16 ":" ] h16 ] "::"  h16 ":"  ls32
  | [ [ h16 ":" ][ h16 ":" ][ h16 ":" ][ h16 ":" ] h16 ] "::"  ls32
  | [ [ h16 ":" ][ h16 ":" ][ h16 ":" ][ h16 ":" ][ h16 ":" ] h16 ] "::"  h16
  | [ [ h16 ":" ][ h16 ":" ][ h16 ":" ][ h16 ":" ][ h16 ":" ][ h16 ":" ] h16 ] "::"

h16 ::= (HEXDIG) | (HEXDIG HEXDIG) | (HEXDIG HEXDIG HEXDIG) | (HEXDIG HEXDIG HEXDIG HEXDIG)
ls32 ::= ( h16 ":" h16 ) | IPv4address
IPv4address ::= dec-octet "." dec-octet "." dec-octet "." dec-octet

dec-octet ::= DIGIT // 0-9
  | ( "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ) DIGIT  // 10-99
  | "1" DIGIT DIGIT  // 100-199
  | "2" ( "0" | "1" | "2" | "3" | "4" ) DIGIT  // 200-249
  | "25" ( "0" | "1" | "2" | "3" | "4" | "5" )  // 250-255

reg-name ::= ( unreserved | pct-encoded | sub-delims )*

path ::= path-abempty // begins with "/" or is empty
  | path-absolute  // begins with "/" but not "//"
  | path-noscheme  // begins with a non-colon segment
  | path-rootless  // begins with a segment
  | path-empty  // zero characters

path-abempty ::= ( "/" segment )*
path-absolute ::= "/" [ segment-nz ( "/" segment )* ]
path-noscheme ::= segment-nz-nc ( "/" segment )*
path-rootless ::= segment-nz ( "/" segment )*
path-empty ::= 0//pchar
segment ::= pchar*
segment-nz ::= pchar+
segment-nz-nc ::= ( unreserved | pct-encoded | sub-delims | "@" )+
  // non-zero-length segment without any colon ":"

pchar ::= unreserved | pct-encoded | sub-delims | ":" | "@"

query ::= ( pchar | "/" | "?" )*

fragment ::= ( pchar | "/" | "?" )*

pct-encoded ::= "%" HEXDIG HEXDIG

unreserved ::= ALPHA | DIGIT | "-" | "." | "_" | "~"
reserved ::= gen-delims | sub-delims
gen-delims ::= ":" | "/" | "?" | "#" | "[" | "]" | "@"
sub-delims ::= "!" | "$" | "&" | "'" | "(" | ")"
  | "*" | "+" | "," | ";" | "="
