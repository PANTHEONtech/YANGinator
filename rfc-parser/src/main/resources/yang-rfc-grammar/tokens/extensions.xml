<?xml version="1.0"?>
<!--
  ~
  ~   Copyright (c) 2021-2023 PANTHEON.tech, s.r.o. All rights reserved.
  ~
  ~   This program and the accompanying materials are made available under the
  ~   terms of the Eclipse Public License v1.0 which accompanies this distribution,
  ~   and is available at http://www.eclipse.org/legal/epl-v10.html
  ~
  -->

<configuration>
    <statements>
        <statement>
            <name>module-stmt ::=</name>
            <pin>= 2</pin>
            <implements>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceType"</implements>
            <extends>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceTypeImpl"</extends>
        </statement>
        <statement>
            <name>submodule-stmt ::=</name>
            <pin>= 2</pin>
            <implements>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceType"</implements>
            <extends>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceTypeImpl"</extends>
        </statement>
        <statement>
            <name>type-stmt ::=</name>
            <pin>(".*") = 1</pin>
            <implements>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceType"</implements>
            <extends>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceTypeImpl"</extends>
        </statement>
        <statement>
            <name>typedef-stmt ::=</name>
            <pin>(".*") = 1</pin>
            <implements>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceType"</implements>
            <extends>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceTypeImpl"</extends>
        </statement>
        <statement>
            <name>identity-stmt ::=</name>
            <pin>(".*") = 1</pin>
            <implements>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceType"</implements>
            <extends>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceTypeImpl"</extends>
        </statement>
        <statement>
            <name>base-stmt ::=</name>
            <pin>(".*") = 1</pin>
            <implements>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceType"</implements>
            <extends>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceTypeImpl"</extends>
        </statement>
        <statement>
            <name>grouping-stmt ::=</name>
            <pin>(".*") = 1</pin>
            <implements>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceType"</implements>
            <extends>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceTypeImpl"</extends>
        </statement>
        <statement>
            <name>uses-stmt ::=</name>
            <pin>(".*") = 1</pin>
            <implements>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceType"</implements>
            <extends>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceTypeImpl"</extends>
        </statement>
        <statement>
            <name>import-stmt ::=</name>
            <pin>(".*") = 1</pin>
            <implements>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceType"</implements>
            <extends>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceTypeImpl"</extends>
        </statement>
        <statement>
            <name>include-stmt ::=</name>
            <pin>(".*") = 1</pin>
            <implements>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceType"</implements>
            <extends>"tech.pantheon.yanginator.plugin.reference.YangGeneratedReferenceTypeImpl"</extends>
        </statement>
        <statement>
            <name>module-header-stmts ::=</name>
            <pin>(".*") = 1 recoverWhile=header-recover</pin>
        </statement>
        <statement>
            <name>submodule-header-stmts ::=</name>
            <pin>(".*") = 1 recoverWhile=header-recover</pin>
        </statement>
        <statement>
            <name>meta-stmts ::=</name>
            <pin>(".*") = 1 recoverWhile=meta-recover</pin>
        </statement>
        <statement>
            <name>linkage-stmts ::=</name>
            <pin>(".*") = 1 recoverWhile=linkage-recover</pin>
        </statement>
        <statement>
            <name>body-sub-stmt ::=</name>
            <pin>(".*") = 1 recoverWhile=body-recovery</pin>
        </statement>
        <statement>
            <name>revision-stmt ::=</name>
            <pin>(".*") = 1 recoverWhile=revision-recover</pin>
        </statement>
        <statement>
            <name>deviate-replace-stmt ::=</name>
            <pin>(".*") = 3</pin>
        </statement>
        <statement>
            <name>deviate-add-stmt ::=</name>
            <pin>(".*") = 3</pin>
        </statement>
        <statement>
            <name>deviate-delete-stmt ::=</name>
            <pin>(".*") = 3</pin>
        </statement>
        <statement>
            <name>deviate-not-supported-stmt ::=</name>
            <pin>(".*") = 3</pin>
        </statement>
        <statement>
            <name>stmt ::=</name>
            <pin>(".*") = 1</pin>
        </statement>
        <statement>
            <name>yang-keyword ::=</name>
            <pin>(".*") = 1</pin>
        </statement>
        <statement>
            <name>quoted-string ::= (</name>
            <implements>"tech.pantheon.yanginator.plugin.injection.YangLanguageInjectionHost"</implements>
            <extends>"tech.pantheon.yanginator.plugin.injection.impl.YangLanguageInjectionHostImpl"</extends>
        </statement>
    </statements>
</configuration>