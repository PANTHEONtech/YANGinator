%unicode

EOL=\R
WHITE_SPACE=\s+


%%
<YYINITIAL> {
  {WHITE_SPACE}                                         { return WHITE_SPACE; }

  "LEFT_BRACE"                                          { return YANG_LEFT_BRACE; }
  "RIGHT_BRACE"                                         { return YANG_RIGHT_BRACE; }
  "DOUBLE_QUOTE < yang-version-arg DOUBLE_QUOTE"        { return YANG_DOUBLE_QUOTE < YANG-VERSION-ARG DOUBLE_QUOTE; }
  "SEMICOLON"                                           { return YANG_SEMICOLON; }
  "DOUBLE_QUOTE"                                        { return YANG_DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < yin-element-arg DOUBLE_QUOTE"         { return YANG_DOUBLE_QUOTE < YIN-ELEMENT-ARG DOUBLE_QUOTE; }
  "LEFT_PARENTHESIS"                                    { return YANG_LEFT_PARENTHESIS; }
  "RIGHT_PARENTHESIS"                                   { return YANG_RIGHT_PARENTHESIS; }
  "DOUBLE_QUOTE < fraction-digits-arg DOUBLE_QUOTE"     { return YANG_DOUBLE_QUOTE < FRACTION-DIGITS-ARG DOUBLE_QUOTE; }
  "ONE"                                                 { return YANG_ONE; }
  "ZERO"                                                { return YANG_ZERO; }
  "TWO"                                                 { return YANG_TWO; }
  "THREE"                                               { return YANG_THREE; }
  "FOUR"                                                { return YANG_FOUR; }
  "FIVE"                                                { return YANG_FIVE; }
  "SIX"                                                 { return YANG_SIX; }
  "SEVEN"                                               { return YANG_SEVEN; }
  "EIGHT"                                               { return YANG_EIGHT; }
  "NINE"                                                { return YANG_NINE; }
  "DOUBLE_QUOTE < modifier-arg DOUBLE_QUOTE"            { return YANG_DOUBLE_QUOTE < MODIFIER-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < require-instance-arg DOUBLE_QUOTE"    { return YANG_DOUBLE_QUOTE < REQUIRE-INSTANCE-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < position-value-arg DOUBLE_QUOTE"      { return YANG_DOUBLE_QUOTE < POSITION-VALUE-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < status-arg DOUBLE_QUOTE"              { return YANG_DOUBLE_QUOTE < STATUS-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < config-arg DOUBLE_QUOTE"              { return YANG_DOUBLE_QUOTE < CONFIG-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < mandatory-arg DOUBLE_QUOTE"           { return YANG_DOUBLE_QUOTE < MANDATORY-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < ordered-by-arg DOUBLE_QUOTE"          { return YANG_DOUBLE_QUOTE < ORDERED-BY-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < min-value-arg DOUBLE_QUOTE"           { return YANG_DOUBLE_QUOTE < MIN-VALUE-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < max-value-arg DOUBLE_QUOTE"           { return YANG_DOUBLE_QUOTE < MAX-VALUE-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < key-arg DOUBLE_QUOTE"                 { return YANG_DOUBLE_QUOTE < KEY-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < unique-arg DOUBLE_QUOTE"              { return YANG_DOUBLE_QUOTE < UNIQUE-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < refine-arg DOUBLE_QUOTE"              { return YANG_DOUBLE_QUOTE < REFINE-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < uses-augment-arg DOUBLE_QUOTE"        { return YANG_DOUBLE_QUOTE < USES-AUGMENT-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < augment-arg DOUBLE_QUOTE"             { return YANG_DOUBLE_QUOTE < AUGMENT-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < deviation-arg DOUBLE_QUOTE"           { return YANG_DOUBLE_QUOTE < DEVIATION-ARG DOUBLE_QUOTE; }
  "COLON"                                               { return YANG_COLON; }
  "DOUBLE_QUOTE < range-arg DOUBLE_QUOTE"               { return YANG_DOUBLE_QUOTE < RANGE-ARG DOUBLE_QUOTE; }
  "PIPE"                                                { return YANG_PIPE; }
  "DOUBLE_DOT"                                          { return YANG_DOUBLE_DOT; }
  "DOUBLE_QUOTE < length-arg DOUBLE_QUOTE"              { return YANG_DOUBLE_QUOTE < LENGTH-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < date-arg DOUBLE_QUOTE"                { return YANG_DOUBLE_QUOTE < DATE-ARG DOUBLE_QUOTE; }
  "DASH"                                                { return YANG_DASH; }
  "FORWARD_SLASH"                                       { return YANG_FORWARD_SLASH; }
  "OPEN_BRACKET"                                        { return YANG_OPEN_BRACKET; }
  "CLOSED_BRACKET"                                      { return YANG_CLOSED_BRACKET; }
  "EQUALS"                                              { return YANG_EQUALS; }
  "DOT"                                                 { return YANG_DOT; }
  "DOUBLE_QUOTE < path-arg DOUBLE_QUOTE"                { return YANG_DOUBLE_QUOTE < PATH-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < prefix-arg DOUBLE_QUOTE"              { return YANG_DOUBLE_QUOTE < PREFIX-ARG DOUBLE_QUOTE; }
  "DOUBLE_QUOTE < identifier-arg DOUBLE_QUOTE"          { return YANG_DOUBLE_QUOTE < IDENTIFIER-ARG DOUBLE_QUOTE; }
  "ALPHA"                                               { return YANG_ALPHA; }
  "UNDERSCORE"                                          { return YANG_UNDERSCORE; }
  "DOUBLE_QUOTE < identifier-ref-arg DOUBLE_QUOTE"      { return YANG_DOUBLE_QUOTE < IDENTIFIER-REF-ARG DOUBLE_QUOTE; }
  "POSITIVE_NUMBER"                                     { return YANG_POSITIVE_NUMBER; }
  "SINGLE_QUOTE"                                        { return YANG_SINGLE_QUOTE; }
  "CARRIAGE_RETURN"                                     { return YANG_CARRIAGE_RETURN; }
  "TAB"                                                 { return YANG_TAB; }
  "LINEFEED"                                            { return YANG_LINEFEED; }
  "QUESTION_MARK"                                       { return YANG_QUESTION_MARK; }
  "HASH"                                                { return YANG_HASH; }
  "DOUBLE_PIPE"                                         { return YANG_DOUBLE_PIPE; }
  "PLUS_SIGN"                                           { return YANG_PLUS_SIGN; }
  "AT_SIGN"                                             { return YANG_AT_SIGN; }
  "VERSION"                                             { return YANG_VERSION; }
  "HEXDIG"                                              { return YANG_HEXDIG; }
  "DOUBLE_COLON"                                        { return YANG_DOUBLE_COLON; }
  "PERCENT_SIGN"                                        { return YANG_PERCENT_SIGN; }
  "TILDE"                                               { return YANG_TILDE; }
  "EXCLAMATION_MARK"                                    { return YANG_EXCLAMATION_MARK; }
  "DOLLAR_SIGN"                                         { return YANG_DOLLAR_SIGN; }
  "AMPERSAND"                                           { return YANG_AMPERSAND; }
  "ASTERISK"                                            { return YANG_ASTERISK; }
  "COMMA"                                               { return YANG_COMMA; }
  "H_ANYXML_KEYWORD"                                    { return YANG_H_ANYXML_KEYWORD; }
  "H_ARGUMENT_KEYWORD"                                  { return YANG_H_ARGUMENT_KEYWORD; }
  "H_AUGMENT_KEYWORD"                                   { return YANG_H_AUGMENT_KEYWORD; }
  "H_BASE_KEYWORD"                                      { return YANG_H_BASE_KEYWORD; }
  "H_BELONGS_TO_KEYWORD"                                { return YANG_H_BELONGS_TO_KEYWORD; }
  "H_BIT_KEYWORD"                                       { return YANG_H_BIT_KEYWORD; }
  "H_CASE_KEYWORD"                                      { return YANG_H_CASE_KEYWORD; }
  "H_CHOICE_KEYWORD"                                    { return YANG_H_CHOICE_KEYWORD; }
  "H_CONFIG_KEYWORD"                                    { return YANG_H_CONFIG_KEYWORD; }
  "H_CONTACT_KEYWORD"                                   { return YANG_H_CONTACT_KEYWORD; }
  "H_CONTAINER_KEYWORD"                                 { return YANG_H_CONTAINER_KEYWORD; }
  "H_DEFAULT_KEYWORD"                                   { return YANG_H_DEFAULT_KEYWORD; }
  "H_DESCRIPTION_KEYWORD"                               { return YANG_H_DESCRIPTION_KEYWORD; }
  "H_ENUM_KEYWORD"                                      { return YANG_H_ENUM_KEYWORD; }
  "H_ERROR_APP_TAG_KEYWORD"                             { return YANG_H_ERROR_APP_TAG_KEYWORD; }
  "H_ERROR_MESSAGE_KEYWORD"                             { return YANG_H_ERROR_MESSAGE_KEYWORD; }
  "H_EXTENSION_KEYWORD"                                 { return YANG_H_EXTENSION_KEYWORD; }
  "H_DEVIATION_KEYWORD"                                 { return YANG_H_DEVIATION_KEYWORD; }
  "H_DEVIATE_KEYWORD"                                   { return YANG_H_DEVIATE_KEYWORD; }
  "H_FEATURE_KEYWORD"                                   { return YANG_H_FEATURE_KEYWORD; }
  "H_FRACTION_DIGITS_KEYWORD"                           { return YANG_H_FRACTION_DIGITS_KEYWORD; }
  "H_GROUPING_KEYWORD"                                  { return YANG_H_GROUPING_KEYWORD; }
  "H_IDENTITY_KEYWORD"                                  { return YANG_H_IDENTITY_KEYWORD; }
  "H_IF_FEATURE_KEYWORD"                                { return YANG_H_IF_FEATURE_KEYWORD; }
  "H_IMPORT_KEYWORD"                                    { return YANG_H_IMPORT_KEYWORD; }
  "H_INCLUDE_KEYWORD"                                   { return YANG_H_INCLUDE_KEYWORD; }
  "H_INPUT_KEYWORD"                                     { return YANG_H_INPUT_KEYWORD; }
  "H_KEY_KEYWORD"                                       { return YANG_H_KEY_KEYWORD; }
  "H_LEAF_KEYWORD"                                      { return YANG_H_LEAF_KEYWORD; }
  "H_LEAF_LIST_KEYWORD"                                 { return YANG_H_LEAF_LIST_KEYWORD; }
  "H_LENGTH_KEYWORD"                                    { return YANG_H_LENGTH_KEYWORD; }
  "H_LIST_KEYWORD"                                      { return YANG_H_LIST_KEYWORD; }
  "H_MANDATORY_KEYWORD"                                 { return YANG_H_MANDATORY_KEYWORD; }
  "H_MAX_ELEMENTS_KEYWORD"                              { return YANG_H_MAX_ELEMENTS_KEYWORD; }
  "H_MIN_ELEMENTS_KEYWORD"                              { return YANG_H_MIN_ELEMENTS_KEYWORD; }
  "H_MODULE_KEYWORD"                                    { return YANG_H_MODULE_KEYWORD; }
  "H_MUST_KEYWORD"                                      { return YANG_H_MUST_KEYWORD; }
  "H_NAMESPACE_KEYWORD"                                 { return YANG_H_NAMESPACE_KEYWORD; }
  "H_NOTIFICATION_KEYWORD"                              { return YANG_H_NOTIFICATION_KEYWORD; }
  "H_ORDERED_BY_KEYWORD"                                { return YANG_H_ORDERED_BY_KEYWORD; }
  "H_ORGANIZATION_KEYWORD"                              { return YANG_H_ORGANIZATION_KEYWORD; }
  "H_OUTPUT_KEYWORD"                                    { return YANG_H_OUTPUT_KEYWORD; }
  "H_PATH_KEYWORD"                                      { return YANG_H_PATH_KEYWORD; }
  "H_PATTERN_KEYWORD"                                   { return YANG_H_PATTERN_KEYWORD; }
  "H_POSITION_KEYWORD"                                  { return YANG_H_POSITION_KEYWORD; }
  "H_PREFIX_KEYWORD"                                    { return YANG_H_PREFIX_KEYWORD; }
  "H_PRESENCE_KEYWORD"                                  { return YANG_H_PRESENCE_KEYWORD; }
  "H_RANGE_KEYWORD"                                     { return YANG_H_RANGE_KEYWORD; }
  "H_REFERENCE_KEYWORD"                                 { return YANG_H_REFERENCE_KEYWORD; }
  "H_REFINE_KEYWORD"                                    { return YANG_H_REFINE_KEYWORD; }
  "H_REQUIRE_INSTANCE_KEYWORD"                          { return YANG_H_REQUIRE_INSTANCE_KEYWORD; }
  "H_REVISION_KEYWORD"                                  { return YANG_H_REVISION_KEYWORD; }
  "H_REVISION_DATE_KEYWORD"                             { return YANG_H_REVISION_DATE_KEYWORD; }
  "H_RPC_KEYWORD"                                       { return YANG_H_RPC_KEYWORD; }
  "H_STATUS_KEYWORD"                                    { return YANG_H_STATUS_KEYWORD; }
  "H_SUBMODULE_KEYWORD"                                 { return YANG_H_SUBMODULE_KEYWORD; }
  "H_TYPE_KEYWORD"                                      { return YANG_H_TYPE_KEYWORD; }
  "H_TYPEDEF_KEYWORD"                                   { return YANG_H_TYPEDEF_KEYWORD; }
  "H_UNIQUE_KEYWORD"                                    { return YANG_H_UNIQUE_KEYWORD; }
  "H_UNITS_KEYWORD"                                     { return YANG_H_UNITS_KEYWORD; }
  "H_USES_KEYWORD"                                      { return YANG_H_USES_KEYWORD; }
  "H_VALUE_KEYWORD"                                     { return YANG_H_VALUE_KEYWORD; }
  "H_WHEN_KEYWORD"                                      { return YANG_H_WHEN_KEYWORD; }
  "H_YANG_VERSION_KEYWORD"                              { return YANG_H_YANG_VERSION_KEYWORD; }
  "H_YIN_ELEMENT_KEYWORD"                               { return YANG_H_YIN_ELEMENT_KEYWORD; }
  "H_CURRENT_KEYWORD"                                   { return YANG_H_CURRENT_KEYWORD; }
  "H_DELETE_KEYWORD"                                    { return YANG_H_DELETE_KEYWORD; }
  "H_DEPRECATED_KEYWORD"                                { return YANG_H_DEPRECATED_KEYWORD; }
  "H_FALSE_KEYWORD"                                     { return YANG_H_FALSE_KEYWORD; }
  "H_ADD_KEYWORD"                                       { return YANG_H_ADD_KEYWORD; }
  "H_MAX_KEYWORD"                                       { return YANG_H_MAX_KEYWORD; }
  "H_MIN_KEYWORD"                                       { return YANG_H_MIN_KEYWORD; }
  "H_NOT_SUPPORTED_KEYWORD"                             { return YANG_H_NOT_SUPPORTED_KEYWORD; }
  "H_OBSOLETE_KEYWORD"                                  { return YANG_H_OBSOLETE_KEYWORD; }
  "H_REPLACE_KEYWORD"                                   { return YANG_H_REPLACE_KEYWORD; }
  "H_SYSTEM_KEYWORD"                                    { return YANG_H_SYSTEM_KEYWORD; }
  "H_TRUE_KEYWORD"                                      { return YANG_H_TRUE_KEYWORD; }
  "H_UNBOUNDED_KEYWORD"                                 { return YANG_H_UNBOUNDED_KEYWORD; }
  "H_USER_KEYWORD"                                      { return YANG_H_USER_KEYWORD; }
  "H_SEMICOLON"                                         { return YANG_H_SEMICOLON; }
  "H_NOT_STRING"                                        { return YANG_H_NOT_STRING; }
  "H_STRING"                                            { return YANG_H_STRING; }
  "H_WHITE_SPACE"                                       { return YANG_H_WHITE_SPACE; }
  "H_DATE_ARG"                                          { return YANG_H_DATE_ARG; }
  "H_IDENTIFIER"                                        { return YANG_H_IDENTIFIER; }
  "H_EXTENSION_IDENTIFIER"                              { return YANG_H_EXTENSION_IDENTIFIER; }
  "H_BLOCK_COMMENT"                                     { return YANG_H_BLOCK_COMMENT; }
  "H_SINGLE_LINE_COMMENT"                               { return YANG_H_SINGLE_LINE_COMMENT; }
  "BLOCK_COMMENT_END"                                   { return YANG_BLOCK_COMMENT_END; }
  "H_FS"                                                { return YANG_H_FS; }
  "H_A"                                                 { return YANG_H_A; }


}