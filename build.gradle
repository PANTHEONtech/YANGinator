plugins {
    id 'java-library'
    id 'checkstyle'
}

checkstyle {
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

checkstyleMain {
    //source has to be pointed at src/main/java, thats why it is a List
    source = List.of('intelij-plugin/src/main/java', 'rfc-parser/src/main/java', 'intelij-plugin/src/main/resources')
}

checkstyleTest {
    source = List.of('intelij-plugin/src/test/java', 'rfc-parser/src/test/java')
}

group 'tech.pantheon.YANGinator'
version '2.2-SNAPSHOT'

allprojects {
    apply plugin: 'java'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
    }

}

subprojects {
    version = rootProject.version
    group = rootProject.group
}

tasks {
    wrapper {
        gradleVersion = "$gradleVersion"
    }
}

task createReleaseVersion {
    doLast {
        def snapshotVersion = buildFile.getText().find(version)
        String tmp = snapshotVersion.toString()
        if (tmp.contains("-beta-") || tmp.contains("-SNAPSHOT")) {
            String currentMinor = version.substring(snapshotVersion.lastIndexOf('.') + 2)
            tmp = snapshotVersion.replace(currentMinor, "")
        }
        println "Release version : " + tmp
        String newBuildFile = buildFile.getText().replaceFirst("version '$version'", "version '" + tmp + "'")
        buildFile.setText(newBuildFile)
    }
}

task createNextSnapshotVersion {
    doLast {
        def releaseVersion = buildFile.getText().find(version)
        String currentMinor = version.substring(releaseVersion.lastIndexOf('.') + 1)
        int nextMinor = currentMinor.toInteger() + 1
        def snapshotVersion = releaseVersion.replace("." + currentMinor, "." + nextMinor + "-SNAPSHOT")
        println "Snapshot version : " + snapshotVersion
        String newBuildFile = buildFile.getText().replaceFirst("version '$version'", "version '" + snapshotVersion + "'")
        buildFile.setText(newBuildFile)
    }
}
task createBetaVersion {
    doLast {
        def currentVersion = buildFile.getText().find(version)
        currentVersion = currentVersion.replace("-SNAPSHOT", "")
        if (!currentVersion.contains("-beta-")) {
            currentVersion += "-beta-" + 1
        }
        println "Beta version : " + currentVersion
        String newBuildFile = buildFile.getText().replaceFirst("version '$version'", "version '" + currentVersion + "'")
        buildFile.setText(newBuildFile)
    }
}

task createBetaSnapshotVersion {
    doLast {
        def currentVersion = buildFile.getText().find(version)
        currentVersion = currentVersion.replace("-SNAPSHOT", "")
        String currentMinor = currentVersion.substring(currentVersion.lastIndexOf('-') + 1)
        int nextMinor = currentMinor.toInteger() + 1
        currentVersion = currentVersion.replace("-" + currentMinor, "-" + nextMinor + "-SNAPSHOT")
        println "Beta Snapshot version : " + currentVersion
        String newBuildFile = buildFile.getText().replaceFirst("version '$version'", "version '" + currentVersion + "'")
        buildFile.setText(newBuildFile)
    }
}
